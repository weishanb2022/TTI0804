{"version":3,"sources":["../../../widgets/Legend/Widget.js"],"names":["define","declare","array","lang","html","on","legendUtils","_WidgetsInTemplateMixin","BaseWidget","LayerInfos","Legend","clazz","name","baseClass","legend","_jimuLayerInfos","startup","inherited","arguments","config","layerState","syncWithWebmap","getInstanceSync","_createLegendForOperationalLayers","_bindEvent","destroy","legendForBasemap","legendParams","arrangement","autoUpdate","respectCurrentMapScale","map","layerInfos","_getLayerInfosParam","create","operationalLayersPart","_createLegendForBasemaplLayers","setStyle","basemapLayersTitle","_getBasemapLayerInfosParam","basemapLayersDiv","own","hitch","layerInfosParam","forEach","getBasemapLayers","basemapLayerObject","isSupportedLayerType","layerInfoParam","layer","title","push","basemapLayerInfosParam","showLegendForBasemap","concat","getLayerInfosParam","refreshLegend","refresh"],"mappings":"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","file":"Widget.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////\r\n// Copyright Â© Esri. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//    http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\ndefine([\r\n    'dojo/_base/declare',\r\n    'dojo/_base/array',\r\n    'dojo/_base/lang',\r\n    'dojo/_base/html',\r\n    'dojo/on',\r\n    './Utils',\r\n    'dijit/_WidgetsInTemplateMixin',\r\n    'jimu/BaseWidget',\r\n    'jimu/LayerInfos/LayerInfos',\r\n    'esri/dijit/Legend'\r\n], function(declare, array, lang, html, on, legendUtils,\r\n_WidgetsInTemplateMixin, BaseWidget, LayerInfos, Legend) {\r\n\r\n  var clazz = declare([BaseWidget, _WidgetsInTemplateMixin], {\r\n    name: 'Legend',\r\n    baseClass: 'jimu-widget-legend',\r\n    legend: null,\r\n    _jimuLayerInfos: null,\r\n\r\n    startup: function() {\r\n      this.inherited(arguments);\r\n      if(!this.config.layerState || this.config.syncWithWebmap) {\r\n        // compatible before online5.4\r\n        this.config.layerState = {};\r\n      }\r\n      this._jimuLayerInfos = LayerInfos.getInstanceSync();\r\n      this._createLegendForOperationalLayers();\r\n      /*\r\n      if(this.config.showLegendForBasemap) {\r\n        this._createLegendForBasemaplLayers();\r\n      }\r\n      */\r\n      this._bindEvent();\r\n    },\r\n\r\n    destroy: function() {\r\n      this.legend.destroy();\r\n      if(this.legendForBasemap) {\r\n        this.legendForBasemap.destroy();\r\n      }\r\n      this.inherited(arguments);\r\n    },\r\n\r\n    _createLegendForOperationalLayers: function() {\r\n      var legendParams = {\r\n        arrangement: this.config.legend.arrangement,\r\n        autoUpdate: this.config.legend.autoUpdate,\r\n        respectCurrentMapScale: this.config.legend.respectCurrentMapScale,\r\n        //respectVisibility: false,\r\n        map: this.map,\r\n        layerInfos: this._getLayerInfosParam()\r\n      };\r\n      this.legend = new Legend(legendParams, html.create(\"div\", {}, this.operationalLayersPart));\r\n      this.legend.startup();\r\n    },\r\n\r\n    _createLegendForBasemaplLayers: function() {\r\n      html.setStyle(this.basemapLayersTitle, 'display', 'block');\r\n      var legendParams = {\r\n        arrangement: this.config.legend.arrangement,\r\n        autoUpdate: this.config.legend.autoUpdate,\r\n        respectCurrentMapScale: this.config.legend.respectCurrentMapScale,\r\n        //respectVisibility: false,\r\n        map: this.map,\r\n        layerInfos: this._getBasemapLayerInfosParam()\r\n      };\r\n      this.legendForBasemap = new Legend(legendParams, html.create(\"div\", {}, this.basemapLayersDiv));\r\n      this.legendForBasemap.startup();\r\n    },\r\n\r\n    _bindEvent: function() {\r\n      if(this.config.legend.autoUpdate) {\r\n        this.own(on(this._jimuLayerInfos,\r\n                    'layerInfosIsShowInMapChanged',\r\n                    lang.hitch(this, 'refreshLegend')));\r\n\r\n        this.own(on(this._jimuLayerInfos,\r\n                    'layerInfosChanged',\r\n                    lang.hitch(this, 'refreshLegend')));\r\n\r\n        this.own(on(this._jimuLayerInfos,\r\n                    'basemapLayersChanged',\r\n                    lang.hitch(this, 'refreshLegend')));\r\n\r\n        this.own(on(this._jimuLayerInfos,\r\n                    'layerInfosRendererChanged',\r\n                    lang.hitch(this, 'refreshLegend')));\r\n      }\r\n    },\r\n\r\n    _getBasemapLayerInfosParam: function() {\r\n      var layerInfosParam = [];\r\n      array.forEach(this._jimuLayerInfos.getBasemapLayers(), function(basemapLayerObject) {\r\n        if(legendUtils.isSupportedLayerType(basemapLayerObject)) {\r\n          var layerInfoParam = {\r\n            layer: basemapLayerObject,\r\n            title: basemapLayerObject.name //|| basemapLayerObject.id\r\n          };\r\n          layerInfosParam.push(layerInfoParam);\r\n        }\r\n      });\r\n\r\n      return layerInfosParam;\r\n    },\r\n\r\n    _getLayerInfosParam: function() {\r\n      var layerInfosParam;\r\n      var basemapLayerInfosParam;\r\n\r\n      /*\r\n      if(this.config.legend.layerInfos === undefined) {\r\n        // widget has not been configed.\r\n        layerInfosParam = legendUtils.getLayerInfosParam();\r\n      } else {\r\n        // widget has been configed, respect config.\r\n        layerInfosParam = legendUtils.getLayerInfosParamByConfig(this.config.legend);\r\n      }\r\n      */\r\n\r\n      if(this.config.showLegendForBasemap) {\r\n        basemapLayerInfosParam = this._getBasemapLayerInfosParam();\r\n      } else {\r\n        basemapLayerInfosParam = [];\r\n      }\r\n\r\n\r\n      layerInfosParam = basemapLayerInfosParam.concat(legendUtils.getLayerInfosParam(this.config));\r\n\r\n      return layerInfosParam;\r\n    },\r\n\r\n    refreshLegend: function() {\r\n      if(this.legend) {\r\n        var layerInfos = this._getLayerInfosParam();\r\n        this.legend.refresh(layerInfos);\r\n      }\r\n    }\r\n\r\n  });\r\n  return clazz;\r\n});\r\n"]}