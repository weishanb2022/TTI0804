{"version":3,"sources":["../../../../widgets/Legend/setting/Setting.js"],"names":["define","declare","array","html","lang","Deferred","on","BaseWidgetSetting","LayerChooserFromMapLite","LayerInfos","_WidgetsInTemplateMixin","baseClass","startup","inherited","arguments","config","legend","setConfig","arrangement","undefined","selectArrangement","set","autoUpdate","setValue","respectCurrentMapScale","showLegendForBasemap","_setLayerChooser","layerState","syncWithWebmapToggle","syncWithWebmap","layerChooser","setViewMode","own","hitch","_onSyncWithWebmapToggleChange","getConfig","parseInt","get","checked","getState","restoreState","customFilter","layerInfo","def","rootLayerInfo","isTable","resolve","isRootLayer","getRootLayerInfo","layerObject","declaredClass","layerStateController","layerLegendStateController","onlyShowWebMapLayers","onlySelectLeafLayer","placeAt","layerChooserDiv","_updateLayerChooserUI","layerInfos","getInstanceSync","forEach","getLayerInfoArray","domNodes","getLayerAssociateDomNodesById","id","collapseIcon","setStyle","_onRefreshButtonClick"],"mappings":"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","file":"Setting.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////\r\n// Copyright Â© Esri. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//    http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\ndefine([\r\n    'dojo/_base/declare',\r\n    'dojo/_base/array',\r\n    'dojo/_base/html',\r\n    'dojo/_base/lang',\r\n    'dojo/Deferred',\r\n    'dojo/on',\r\n    'jimu/BaseWidgetSetting',\r\n    'jimu/dijit/LayerChooserFromMapLite',\r\n    'jimu/LayerInfos/LayerInfos',\r\n    'dijit/_WidgetsInTemplateMixin',\r\n    'dijit/form/NumberTextBox',\r\n    'dijit/form/CheckBox'\r\n  ],\r\n  function(\r\n    declare,\r\n    array,\r\n    html,\r\n    lang,\r\n    Deferred,\r\n    on,\r\n    BaseWidgetSetting,\r\n    LayerChooserFromMapLite,\r\n    LayerInfos,\r\n    _WidgetsInTemplateMixin) {\r\n    return declare([BaseWidgetSetting, _WidgetsInTemplateMixin], {\r\n\r\n      baseClass: 'jimu-widget-legend-setting',\r\n\r\n      startup: function() {\r\n        this.inherited(arguments);\r\n        if (!this.config.legend) {\r\n          this.config.legend = {};\r\n        }\r\n\r\n        /*\r\n        this.syncWithWebmapToggle = new ToggleButton({});\r\n        this.syncWithWebmapToggle.placeAt(this.toggleButtonDiv);\r\n        this.syncWithWebmapToggle.startup();\r\n        */\r\n\r\n        this.setConfig(this.config);\r\n      },\r\n\r\n      setConfig: function(config) {\r\n        this.config = config;\r\n        if (config.legend.arrangement !== undefined) {\r\n          this.selectArrangement.set('value', config.legend.arrangement);\r\n        }\r\n        this.autoUpdate.setValue(config.legend.autoUpdate);\r\n        this.respectCurrentMapScale.setValue(config.legend.respectCurrentMapScale);\r\n        this.showLegendForBasemap.setValue(config.showLegendForBasemap);\r\n\r\n        this._setLayerChooser(this.config.layerState);\r\n\r\n        this.syncWithWebmapToggle.setValue(config.syncWithWebmap);\r\n        if(config.syncWithWebmap) {\r\n          this._setLayerChooser(null);\r\n          this.layerChooser.setViewMode(true);\r\n        }\r\n        this.own(on(this.syncWithWebmapToggle, 'change', lang.hitch(this, this._onSyncWithWebmapToggleChange)));\r\n      },\r\n\r\n      getConfig: function() {\r\n        this.config.legend.arrangement = parseInt(this.selectArrangement.get('value'), 10);\r\n        this.config.legend.autoUpdate = this.autoUpdate.checked;\r\n        this.config.legend.respectCurrentMapScale = this.respectCurrentMapScale.checked;\r\n        this.config.showLegendForBasemap = this.showLegendForBasemap.checked;\r\n\r\n        this.config.syncWithWebmap = this.syncWithWebmapToggle.checked;\r\n\r\n        //consider the state of this.syncWithWebmapToggle\r\n        if(!this.config.syncWithWebmap) {\r\n          this.config.layerState = this.layerChooser.getState();\r\n        }\r\n        return this.config;\r\n      },\r\n\r\n      _setLayerChooser: function(layerState) {\r\n        // customFilter\r\n        if(this.layerChooser) {\r\n          this.layerChooser.restoreState(layerState);\r\n        } else {\r\n          var customFilter = function(layerInfo) {\r\n            var def = new Deferred();\r\n            var rootLayerInfo = null;\r\n\r\n            if(layerInfo.isTable) {\r\n              def.resolve(false);\r\n            } else if(layerInfo.isRootLayer()) {\r\n              def.resolve(true);\r\n            } else {\r\n              rootLayerInfo = layerInfo.getRootLayerInfo();\r\n              if(rootLayerInfo &&\r\n                 rootLayerInfo.layerObject &&\r\n                 (rootLayerInfo.layerObject.declaredClass === \"esri.layers.ArcGISDynamicMapServiceLayer\" ||\r\n                  rootLayerInfo.layerObject.declaredClass === \"esri.layers.ArcGISTiledMapServiceLayer\" ||\r\n                  rootLayerInfo.layerObject.declaredClass === \"esri.layers.FeatureCollection\")) {\r\n                def.resolve(true);\r\n              } else {\r\n                def.resolve(false);\r\n              }\r\n            }\r\n            return def;\r\n          };\r\n          // layerLegendStateController\r\n          this.layerChooser = new LayerChooserFromMapLite({\r\n            customFilter: customFilter,\r\n            layerState: layerState,\r\n            layerStateController: LayerChooserFromMapLite.layerLegendStateController,\r\n            onlyShowWebMapLayers: true,\r\n            onlySelectLeafLayer: true\r\n          });\r\n          this.layerChooser.placeAt(this.layerChooserDiv);\r\n        }\r\n        this._updateLayerChooserUI();\r\n      },\r\n\r\n      _updateLayerChooserUI: function() {\r\n        var layerInfos = LayerInfos.getInstanceSync();\r\n        array.forEach(layerInfos.getLayerInfoArray(), function(layerInfo) {\r\n          if(layerInfo &&\r\n             layerInfo.layerObject &&\r\n             layerInfo.layerObject.declaredClass !== \"esri.layers.ArcGISDynamicMapServiceLayer\" &&\r\n             layerInfo.layerObject.declaredClass !== \"esri.layers.ArcGISTiledMapServiceLayer\" &&\r\n             layerInfo.layerObject.declaredClass !== \"esri.layers.FeatureCollection\") {\r\n            var domNodes = this.layerChooser.getLayerAssociateDomNodesById(layerInfo.id);\r\n            if(domNodes && domNodes.collapseIcon) {\r\n              html.setStyle(domNodes.collapseIcon, 'background-image', 'none');\r\n            }\r\n          }\r\n        }, this);\r\n      },\r\n\r\n      _onSyncWithWebmapToggleChange: function(checked) {\r\n        if(checked) {\r\n          this._setLayerChooser(null);\r\n          this.layerChooser.setViewMode(true);\r\n        } else {\r\n          this.layerChooser.setViewMode(false);\r\n          this._setLayerChooser(this.config.layerState);\r\n        }\r\n      },\r\n\r\n      _onRefreshButtonClick: function() {\r\n        if(!this.syncWithWebmapToggle.checked) {\r\n          this._setLayerChooser();\r\n        }\r\n      }\r\n\r\n    });\r\n  });\r\n"]}