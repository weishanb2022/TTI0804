{"version":3,"sources":["../../../widgets/Chart/Query.js"],"names":["define","declare","lang","array","Deferred","EsriQuery","QueryTask","jimuUtils","Message","getCleanCurrentAttrsTemplate","template","url","layerInfo","limit","spatialReference","queryType","objectIdField","query","maxRecordCount","where","geometry","relationship","SPATIAL_REL_INTERSECTS","outFields","nextIndex","allCount","objectIds","features","SingleTaskClass","currentAttrs","constructor","options","_getQueryType","getObjectIdField","getFeatures","def","_getAllFeatures_SupportObjectIds","_getAllFeatures_NotSupportObjectIds","layerDefinition","_isSupportObjectIds","currentVersion","parseFloat","hasOwnProperty","_queryIds","then","hitch","hasResults","length","status","count","_isContinue","isContinue","_onResultsScroll_SupportObjectIds","queryFeaturesNls","window","jimuNls","queryFeatures","message","tooManyFeaturesTip","askForContinue","buttons","label","common","continue1","onClick","resolve","close","cancel","resultDef","allObjectIds","countLeft","queryNum","Math","min","partialIds","slice","_queryByObjectIds","response","concat","_doQuery_NotSupportObjectIds","fs","_query","err","console","error","reject","_getOutputFields","result","returnGeometry","queryParams","outSpatialReference","spatialRelationship","queryTask","execute","executeForIds","code","forEach","objectId","i"],"mappings":"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","file":"Query.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////\r\n// Copyright © Esri. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//    http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\ndefine([\r\n    'dojo/_base/declare',\r\n    'dojo/_base/lang',\r\n    'dojo/_base/array',\r\n    'dojo/Deferred',\r\n    'esri/tasks/query',\r\n    'esri/tasks/QueryTask',\r\n    'jimu/utils',\r\n    'jimu/dijit/Message'\r\n  ],\r\n  function(declare, lang, array, Deferred, EsriQuery, QueryTask, jimuUtils, Message) {\r\n\r\n    function getCleanCurrentAttrsTemplate(){\r\n      var template = {\r\n        url: \"\",\r\n        layerInfo: null,//layerDefinition\r\n        limit: 10 * 1000,\r\n        spatialReference: null,\r\n        queryType: -1,\r\n        objectIdField: \"\",\r\n        query: {\r\n          maxRecordCount: 1000,\r\n          where: '',\r\n          geometry: null,\r\n          relationship: EsriQuery.SPATIAL_REL_INTERSECTS,\r\n          outFields: [\"*\"],\r\n          nextIndex: 0,\r\n          allCount: 0,\r\n          objectIds: [], //optional\r\n          features: []\r\n        }\r\n      };\r\n      return template;\r\n    }\r\n\r\n    var SingleTaskClass = declare(null, {\r\n      currentAttrs: null,\r\n\r\n      //public methods:\r\n      //getFeatures\r\n\r\n      //options: {url,layerInfo,limit,spatialReference,where,geometry,relationship,outFields}\r\n      constructor: function(options){\r\n        this.currentAttrs = getCleanCurrentAttrsTemplate();\r\n        this.currentAttrs.url = options.url;\r\n        this.currentAttrs.layerInfo = options.layerInfo;\r\n        this.currentAttrs.spatialReference = options.spatialReference;\r\n        this.currentAttrs.query.where = options.where;\r\n        this.currentAttrs.query.geometry = options.geometry;\r\n        this.currentAttrs.query.maxRecordCount = options.layerInfo.maxRecordCount || 1000;\r\n        this.currentAttrs.queryType = this._getQueryType(options.layerInfo);\r\n        this.currentAttrs.objectIdField = jimuUtils.getObjectIdField(options.layerInfo);\r\n        if(options.relationship){\r\n          this.currentAttrs.query.relationship = options.relationship;\r\n        }\r\n        if(options.outFields){\r\n          this.currentAttrs.query.outFields = options.outFields;\r\n        }\r\n        if(options.limit > 0 || options.limit > this.currentAttrs.query.maxRecordCount){\r\n          this.currentAttrs.limit = options.limit;\r\n        }\r\n      },\r\n\r\n      //return a deferred object which resolves {status,count,features}\r\n      //if status > 0, means we get all features\r\n      //if status < 0, means count is big, so we can't get features\r\n      getFeatures: function(){\r\n        var def = new Deferred();\r\n        var where = this.currentAttrs.query.where;\r\n        var geometry = this.currentAttrs.query.geometry;\r\n        var relationship = this.currentAttrs.query.relationship;\r\n        if(this.currentAttrs.queryType === 2){\r\n          //support objectIds\r\n          def = this._getAllFeatures_SupportObjectIds(where, geometry, relationship);\r\n        }else{\r\n          //don't support objectIds\r\n          def = this._getAllFeatures_NotSupportObjectIds(where, geometry, relationship);\r\n        }\r\n        return def;\r\n      },\r\n\r\n      _getQueryType: function(layerDefinition){\r\n        var queryType = -1;\r\n\r\n        /*if (this._isServiceSupportsOrderBy(layerDefinition) &&\r\n          this._isServiceSupportsPagination(layerDefinition)) {\r\n          queryType = 1;\r\n        }*/\r\n\r\n        if (this._isSupportObjectIds(layerDefinition)) {\r\n          queryType = 2;\r\n        } else {\r\n          queryType = 3;\r\n        }\r\n        return queryType;\r\n      },\r\n\r\n      _isSupportObjectIds: function(layerInfo){\r\n        //http://resources.arcgis.com/en/help/arcgis-rest-api/#/Layer_Table/02r3000000zr000000/\r\n        //currentVersion is added from 10.0 SP1\r\n        //typeIdField is added from 10.0\r\n        var currentVersion = 0;\r\n        if(layerInfo.currentVersion){\r\n          currentVersion = parseFloat(layerInfo.currentVersion);\r\n        }\r\n        return currentVersion >= 10.0 || layerInfo.hasOwnProperty('typeIdField');\r\n      },\r\n\r\n      /*--------------------query support objectIds------------------------*/\r\n      //resolve {status,count,features}\r\n      _getAllFeatures_SupportObjectIds: function(where, geometry, relationship){\r\n        return this._queryIds(where, geometry, relationship).then(lang.hitch(this, function(objectIds){\r\n          //objectIds maybe null\r\n\r\n          var hasResults = objectIds && objectIds.length > 0;\r\n\r\n          if(!hasResults){\r\n            this.currentAttrs.query.allCount = 0;\r\n\r\n            return {\r\n              status: 1,\r\n              count: 0,\r\n              features: []\r\n            };\r\n          }\r\n\r\n          var allCount = objectIds.length;\r\n          this.currentAttrs.query.allCount = allCount;\r\n          this.currentAttrs.query.objectIds = objectIds;\r\n          this.currentAttrs.query.nextIndex = 0;//reset nextIndex\r\n          var maxRecordCount = this.currentAttrs.query.maxRecordCount;\r\n\r\n          if(allCount > maxRecordCount){\r\n            return this._isContinue().then(lang.hitch(this, function(isContinue){\r\n              if(isContinue){\r\n                return this._onResultsScroll_SupportObjectIds();\r\n              }else{\r\n                return {\r\n                  status: -1,\r\n                  count: allCount,\r\n                  features: []\r\n                };\r\n              }\r\n            }));\r\n          }else{\r\n            return this._onResultsScroll_SupportObjectIds();\r\n          }\r\n\r\n        }));\r\n      },\r\n\r\n      _isContinue: function(){\r\n        var def = new Deferred();\r\n        var queryFeaturesNls = window.jimuNls.queryFeatures;\r\n        var message = new Message({\r\n          message: queryFeaturesNls.tooManyFeaturesTip + \" \" + queryFeaturesNls.askForContinue,\r\n          buttons: [{\r\n            label: window.jimuNls.common.continue1,\r\n            onClick: lang.hitch(this, function(){\r\n              def.resolve(true);\r\n              message.close();\r\n            })\r\n          }, {\r\n            label: window.jimuNls.common.cancel,\r\n            onClick: lang.hitch(this, function(){\r\n              def.resolve(false);\r\n              message.close();\r\n            })\r\n          }]\r\n        });\r\n        return def;\r\n      },\r\n\r\n      //resolve {status,count,features}\r\n      //query for one page\r\n      _onResultsScroll_SupportObjectIds: function(){\r\n        var resultDef = new Deferred();\r\n        var allObjectIds = this.currentAttrs.query.objectIds;\r\n        var allCount = this.currentAttrs.query.allCount;\r\n        var nextIndex = this.currentAttrs.query.nextIndex;\r\n        var maxRecordCount = this.currentAttrs.query.maxRecordCount;\r\n        var relationship = this.currentAttrs.query.relationship;\r\n\r\n        if(nextIndex >= allCount){\r\n          resultDef.resolve({\r\n            status: 1,\r\n            count: allCount,\r\n            features: this.currentAttrs.query.features\r\n          });\r\n          return resultDef;\r\n        }\r\n\r\n        var countLeft = allObjectIds.length - nextIndex;\r\n        var queryNum = Math.min(countLeft, maxRecordCount);\r\n        var partialIds = allObjectIds.slice(nextIndex, nextIndex + queryNum);\r\n        if(partialIds.length === 0){\r\n          resultDef.resolve({\r\n            status: 1,\r\n            count: allCount,\r\n            features: this.currentAttrs.query.features\r\n          });\r\n          return resultDef;\r\n        }\r\n\r\n        //do query by objectIds\r\n        return this._queryByObjectIds(partialIds, true, relationship).then(lang.hitch(this, function(response){\r\n          var features = response.features;\r\n          this.currentAttrs.query.nextIndex += features.length;\r\n          this.currentAttrs.query.features = this.currentAttrs.query.features.concat(features);\r\n          return this._onResultsScroll_SupportObjectIds();\r\n        }));\r\n      },\r\n\r\n      /*--------------------query doesn't support objectIds-------------------------*/\r\n      //resolve {status, count, features}\r\n      _getAllFeatures_NotSupportObjectIds: function(where, geometry, relationship){\r\n        return this._doQuery_NotSupportObjectIds(where, geometry, relationship).then(lang.hitch(this, function(fs){\r\n          return {\r\n            status: 1,\r\n            count: fs.length,\r\n            features: fs\r\n          };\r\n        }));\r\n      },\r\n\r\n      //resolve features\r\n      _doQuery_NotSupportObjectIds: function(where, geometry, relationship){\r\n        var resultDef = new Deferred();\r\n        this._query(where, geometry, true, relationship).then(lang.hitch(this, function(response){\r\n          var features = response.features;\r\n          this.currentAttrs.query.allCount = features.length;\r\n          resultDef.resolve(features);\r\n        }), lang.hitch(this, function(err){\r\n          console.error(err);\r\n          resultDef.reject(err);\r\n        }));\r\n\r\n        return resultDef;\r\n      },\r\n\r\n      /*----------------------------query-------------------------------*/\r\n      _getOutputFields: function(){\r\n        var result = [\"*\"];\r\n        return result;\r\n      },\r\n\r\n      _query: function(where, geometry, returnGeometry, relationship){\r\n        var queryParams = new EsriQuery();\r\n        queryParams.where = where;\r\n        if(geometry){\r\n          queryParams.geometry = geometry;\r\n        }\r\n        queryParams.outSpatialReference = this.currentAttrs.spatialReference;\r\n        queryParams.returnGeometry = !!returnGeometry;\r\n        queryParams.spatialRelationship = relationship;\r\n        queryParams.outFields = this._getOutputFields();\r\n        var queryTask = new QueryTask(this.currentAttrs.url);\r\n        return queryTask.execute(queryParams);\r\n      },\r\n\r\n      _queryIds: function(where, geometry, relationship){\r\n        var queryParams = new EsriQuery();\r\n        queryParams.where = where;\r\n        if(geometry){\r\n          queryParams.geometry = geometry;\r\n        }\r\n        queryParams.returnGeometry = false;\r\n        queryParams.spatialRelationship = relationship;\r\n        queryParams.outSpatialReference = this.currentAttrs.spatialReference;\r\n        var queryTask = new QueryTask(this.currentAttrs.url);\r\n        return queryTask.executeForIds(queryParams);\r\n      },\r\n\r\n      _queryByObjectIds: function(objectIds, returnGeometry, relationship){\r\n        var def = new Deferred();\r\n        var queryParams = new EsriQuery();\r\n        queryParams.returnGeometry = !!returnGeometry;\r\n        queryParams.outSpatialReference = this.currentAttrs.spatialReference;\r\n        queryParams.outFields = this._getOutputFields();\r\n        queryParams.objectIds = objectIds;\r\n        queryParams.spatialRelationship = relationship;\r\n        var queryTask = new QueryTask(this.currentAttrs.url);\r\n        queryTask.execute(queryParams).then(lang.hitch(this, function(response){\r\n          def.resolve(response);\r\n        }), lang.hitch(this, function(err){\r\n          if(err.code === 400){\r\n            //the query fails maybe becasuse the layer is a joined layer\r\n            //joined layer:\r\n            //http://csc-wade7d:6080/arcgis/rest/services/Cases/ParcelWithJoin/MapServer/0\r\n            //joined layer doesn't support query by objectIds direcly, so if the layer is joined,\r\n            //it will go into errorCallback of queryTask.\r\n            //the alternative is using where to re-query.\r\n            var objectIdField = this.currentAttrs.objectIdField;\r\n            var where = \"\";\r\n            var count = objectIds.length;\r\n            array.forEach(objectIds, lang.hitch(this, function(objectId, i){\r\n              where += objectIdField + \" = \" + objectId;\r\n              if(i !== count - 1){\r\n                where += \" OR \";\r\n              }\r\n            }));\r\n            this._query(where, null, returnGeometry, relationship).then(lang.hitch(this, function(response){\r\n              def.resolve(response);\r\n            }), lang.hitch(this, function(err){\r\n              def.reject(err);\r\n            }));\r\n          }else{\r\n            def.reject(err);\r\n          }\r\n        }));\r\n        return def;\r\n      }\r\n\r\n    });\r\n\r\n    SingleTaskClass.getCleanCurrentAttrsTemplate = getCleanCurrentAttrsTemplate;\r\n\r\n    return SingleTaskClass;\r\n  });"]}