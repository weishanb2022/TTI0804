{"version":3,"sources":["../../../../widgets/AttributeTable/actions/ViewInAttributeTableFeatureAction.js"],"names":["define","declare","BaseFeatureAction","WidgetManager","LayerInfos","clazz","map","iconClass","isFeatureSupported","featureSet","layer","layerInfos","getInstanceSync","layerInfo","getLayerOrTableInfoById","id","features","length","getSupportTableInfo","then","tableInfo","isSupportedLayer","isSupportQuery","onExecute","widgetManager","getInstance","displayFieldName","objectIdField","triggerWidgetOpen","widgetId","attrWidget","activateWidget","onReceiveData","target","viewInTableFlag"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,OAAO,CACL,oBADK,EAEL,wBAFK,EAGL,oBAHK,EAIL,4BAJK,CAAP,EAKG,UAASC,OAAT,EAAkBC,iBAAlB,EAAqCC,aAArC,EAAoDC,UAApD,EAA+D;AAChE,MAAIC,QAAQJ,QAAQC,iBAAR,EAA2B;AACrCI,SAAK,IADgC;AAErCC,eAAW,wBAF0B;;AAIrCC,wBAAoB,4BAASC,UAAT,EAAqBC,KAArB,EAA4B;AAC9C,UAAI,CAACD,UAAD,IAAe,CAACC,KAApB,EAA2B;AACzB,eAAO,KAAP;AACD;AACD,UAAIC,aAAaP,WAAWQ,eAAX,EAAjB;AACA,UAAIC,YAAYF,WAAWG,uBAAX,CAAmCJ,MAAMK,EAAzC,CAAhB;AACA,aAAON,WAAWO,QAAX,CAAoBC,MAApB,IAA8BJ,SAA9B,IAA2CA,UAAUK,mBAAV,GAC/CC,IAD+C,CAC1C,UAASC,SAAT,EAAoB;AACxB,eAAOA,aAAaA,UAAUC,gBAAvB,IAA2CD,UAAUE,cAA5D;AACD,OAH+C,CAAlD;AAID,KAdoC;;AAgBrCC,eAAW,mBAASd,UAAT,EAAqBC,KAArB,EAA4B;AACrC,UAAI,CAACD,UAAD,IAAe,CAACC,KAApB,EAA2B;AACzB;AACD;AACD,UAAIc,gBAAgBrB,cAAcsB,WAAd,EAApB;AACA,UAAId,aAAaP,WAAWQ,eAAX,EAAjB;AACA,UAAIC,YAAYF,WAAWG,uBAAX,CAAmCJ,MAAMK,EAAzC,CAAhB;AACAN,iBAAWiB,gBAAX,GAA8BhB,MAAMiB,aAApC;;AAEAH,oBAAcI,iBAAd,CAAgC,KAAKC,QAArC,EACCV,IADD,CACM,UAASW,UAAT,EAAqB;AACzB,YAAGA,UAAH,EAAe;AACbN,wBAAcO,cAAd,CAA6BD,UAA7B;AACAA,qBAAWE,aAAX,CAAyB,IAAzB,EAA+B,IAA/B,EAAqC;AACnCC,oBAAQ,gBAD2B;AAEnCpB,uBAAWA,SAFwB;AAGnCJ,wBAAYA,UAHuB;AAInCyB,6BAAiB;AAJkB,WAArC;AAMD;AACF,OAXD;AAYD;AArCoC,GAA3B,CAAZ;AAuCA,SAAO7B,KAAP;AACD,CA9CD","file":"ViewInAttributeTableFeatureAction.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////\r\n// Copyright Â© Esri. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//    http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\ndefine([\r\n  'dojo/_base/declare',\r\n  'jimu/BaseFeatureAction',\r\n  'jimu/WidgetManager',\r\n  'jimu/LayerInfos/LayerInfos'\r\n], function(declare, BaseFeatureAction, WidgetManager, LayerInfos){\r\n  var clazz = declare(BaseFeatureAction, {\r\n    map: null,\r\n    iconClass: 'icon-view-in-attribute',\r\n\r\n    isFeatureSupported: function(featureSet, layer) {\r\n      if (!featureSet || !layer) {\r\n        return false;\r\n      }\r\n      var layerInfos = LayerInfos.getInstanceSync();\r\n      var layerInfo = layerInfos.getLayerOrTableInfoById(layer.id);\r\n      return featureSet.features.length && layerInfo && layerInfo.getSupportTableInfo()\r\n        .then(function(tableInfo) {\r\n          return tableInfo && tableInfo.isSupportedLayer && tableInfo.isSupportQuery;\r\n        });\r\n    },\r\n\r\n    onExecute: function(featureSet, layer) {\r\n      if (!featureSet || !layer) {\r\n        return;\r\n      }\r\n      var widgetManager = WidgetManager.getInstance();\r\n      var layerInfos = LayerInfos.getInstanceSync();\r\n      var layerInfo = layerInfos.getLayerOrTableInfoById(layer.id);\r\n      featureSet.displayFieldName = layer.objectIdField;\r\n\r\n      widgetManager.triggerWidgetOpen(this.widgetId)\r\n      .then(function(attrWidget) {\r\n        if(attrWidget) {\r\n          widgetManager.activateWidget(attrWidget);\r\n          attrWidget.onReceiveData(null, null, {\r\n            target: \"AttributeTable\",\r\n            layerInfo: layerInfo,\r\n            featureSet: featureSet,\r\n            viewInTableFlag: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n  return clazz;\r\n});\r\n"]}