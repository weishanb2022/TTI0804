{"version":3,"sources":["../../../widgets/AttributeTable/_ResourceManager.js"],"names":["define","declare","lang","array","Deferred","all","esriLang","portalUrlUtils","_FeatureTable","jimuUtils","attrUtils","LayerInfos","_activeLayerInfoId","_activeRelationshipKey","nls","config","map","parent","_delayedLayerInfos","_layerInfosFromMap","featureTableSet","relationshipsSet","relationshipTableSet","currentRelationshipKey","relationshipInfoMapping","constructor","params","widgetId","setConfig","tableConfig","clone","setMap","updateLayerInfoResources","updateConfig","def","readConfigLayerInfosFromMap","then","hitch","layerInfos","_processDelayedLayerInfos","length","configLayerInfos","getConfigInfosFromLayerInfos","filter","layer","show","delegate","layerInfo","mLayerInfo","_getLayerInfoById","id","isVisible","syncWithLayers","name","title","resolve","err","reject","isEmpty","getConfigInfos","addLayerInfo","newLayerInfo","push","addConfigInfo","_getConfigInfoById","info","getConfigInfoFromLayerInfo","url","fields","removeLayerInfo","infoId","_clayerInfo","pos","indexOf","splice","removeConfigInfo","getObject","len","i","destroy","getQueryTable","tabId","enabledMatchingMap","hideExportButton","allowTextSelection","_getQueryTableInfo","queryTableInfo","activeLayerInfo","layerObject","tableInfo","isSupportQuery","table","configInfo","configFields","layerFields","arcade","appendArcadeExpressionsToFields","_clipValidFields","matchingMap","configedInfo","onFeatureSelectionChange","selectionInfo","getRelationTable","originalInfoId","key","currentShip","originalInfo","currentShipInfo","getRelationShipInfo","tableResult","isEqual","relationship","set","removeRelationTable","relationShipKey","getCurrentTable","collectRelationShips","relatedTableInfos","_collectRelationShips","getConfigInfoById","getLayerInfoById","getVisivleLayerInfoIndexById","_getVisivleLayerInfoIndexById","getRelationshipsByInfoId","ships","p","ship","_layerInfoId","relInfo","relKey","_relKey","empty","_removeRelationShipInfo","forEach","delayedLayerInfo","getLayer","layerId","counter","isShowInMap","console","error","Error","defs","hasUrl","getUrl","getLayerObject","getSupportTableInfo","getRelatedTableInfoArray","results","isDefined","relationships","layerUrl","parts","split","relatedTableId","relationUrl","join","tableInfos","tableInfoUrl","removeProtocol","toString","toLowerCase","_setRelationShipInfo","objectIdField","_getLayerInfoLabel","label","_getLayerInfoId","sFields","rFields","validFields","newFields","rf","j","len2","sf","concat","fieldInfos","fieldInfo","type"],"mappings":"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","file":"_ResourceManager.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////\r\n// Copyright © Esri. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//    http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n///////////////////////////////////////////////////////////////////////////\r\ndefine([\r\n  'dojo/_base/declare',\r\n  'dojo/_base/lang',\r\n  'dojo/_base/array',\r\n  'dojo/Deferred',\r\n  'dojo/promise/all',\r\n  'esri/lang',\r\n  'jimu/portalUrlUtils',\r\n  './table/_FeatureTable',\r\n  // './_RelationshipTable',\r\n  'jimu/utils',\r\n  './utils',\r\n  'jimu/LayerInfos/LayerInfos'\r\n  ], function(declare, lang, array, Deferred, all,\r\n    esriLang, portalUrlUtils,\r\n    _FeatureTable,/* _RelationshipTable,*/ jimuUtils, attrUtils, LayerInfos) {\r\n    return declare(null, {\r\n      _activeLayerInfoId: null,\r\n      _activeRelationshipKey: null,\r\n      nls: null,\r\n      config: null,\r\n      map: null,\r\n      parent: null,\r\n\r\n      //FeatureTable\r\n      _delayedLayerInfos: [],\r\n      _layerInfosFromMap: [],\r\n      featureTableSet: {},\r\n\r\n      //RelationshipTable\r\n      // one layer may be have multiple relationships, so we use key-value to store relationships\r\n      relationshipsSet: {},\r\n      relationshipTableSet: {},\r\n      currentRelationshipKey: null,\r\n      relationshipInfoMapping: {},\r\n\r\n      constructor: function(params) {\r\n        this.widgetId = params && params.widgetId;\r\n        this.map = params && params.map;\r\n        this.nls = params && params.nls;\r\n        this.parent = params && params.parent;\r\n\r\n        this._delayedLayerInfos = [];\r\n        this._layerInfosFromMap = [];\r\n        this.featureTableSet = {};\r\n\r\n        this.relationshipsSet = {};\r\n        this.relationshipTableSet = {};\r\n        this.currentRelationshipKey = null;\r\n        this.relationshipInfoMapping = {};\r\n      },\r\n\r\n      setConfig: function(tableConfig) {\r\n        this.config = lang.clone(tableConfig || {});\r\n      },\r\n\r\n      setMap: function(map) {\r\n        this.map = map;\r\n      },\r\n\r\n      //updateConfig: boolean.\r\n      updateLayerInfoResources: function(updateConfig) {\r\n        var def = new Deferred();\r\n        attrUtils.readConfigLayerInfosFromMap(this.map, false, true)\r\n        .then(lang.hitch(this, function(layerInfos) {\r\n          this._layerInfosFromMap = layerInfos;\r\n          this._processDelayedLayerInfos();\r\n\r\n          if (updateConfig) {\r\n            if (this.config.layerInfos.length === 0) {\r\n              // if no config only display visible layers\r\n              var configLayerInfos = attrUtils.getConfigInfosFromLayerInfos(layerInfos);\r\n              this.config.layerInfos = array.filter(configLayerInfos, function(layer) {\r\n                return layer.show;\r\n              });\r\n            } else {\r\n              // filter layer from current map and show property of layerInfo is true\r\n              this.config.layerInfos = array.filter(\r\n                lang.delegate(this.config.layerInfos),\r\n                lang.hitch(this, function(layerInfo) {\r\n                  var mLayerInfo = this._getLayerInfoById(layerInfo.id);\r\n                  var isVisible = this.config.syncWithLayers ?\r\n                    mLayerInfo.isVisible() :\r\n                    layerInfo.show;\r\n                  if(isVisible && mLayerInfo) {\r\n                    layerInfo.name = mLayerInfo.name || mLayerInfo.title;\r\n                    layerInfo.show = isVisible;\r\n                  }\r\n                  return isVisible && mLayerInfo;\r\n                })\r\n              );\r\n            }\r\n          }\r\n          def.resolve();\r\n        }), function(err) {\r\n          def.reject(err);\r\n        });\r\n\r\n        return def;\r\n      },\r\n\r\n      isEmpty: function() {\r\n        return this.config && this.config.layerInfos && this.config.layerInfos.length <= 0;\r\n      },\r\n\r\n      getConfigInfos: function() {\r\n        return lang.clone(this.config.layerInfos);\r\n      },\r\n\r\n      //e.g. When Query create a new feature layer, AT get the layerInfoChanged event,\r\n      //AT needs to call addLayerInfo method to update this._layerInfosFromMap.\r\n      //But AT doesn't open this Query-created feature layer, so it doesn't call addConfigInfo().\r\n      addLayerInfo: function(newLayerInfo) {\r\n        if (this._layerInfosFromMap.length === 0) {\r\n          this._delayedLayerInfos.push(newLayerInfo);\r\n        } else if (this._layerInfosFromMap.length > 0 &&\r\n          !this._getLayerInfoById(newLayerInfo.id)) {\r\n          this._layerInfosFromMap.push(newLayerInfo); // _layerInfosFromMap read from map\r\n        }\r\n      },\r\n\r\n      //When user open AT from Query result page, AT will call addConfigInfo method to\r\n      //update this.config.layerInfos. this.config.layerInfos syncs with ContentPanes of AT.\r\n      addConfigInfo: function(newLayerInfo) {\r\n        if (!this._getConfigInfoById(newLayerInfo.id)) {\r\n          var info = attrUtils.getConfigInfoFromLayerInfo(newLayerInfo);\r\n          this.config.layerInfos.push({\r\n            id: info.id,\r\n            name: info.name,\r\n            layer: {\r\n              url: info.layer.url,\r\n              fields: info.layer.fields\r\n            }\r\n          });\r\n        }\r\n      },\r\n\r\n      removeLayerInfo: function(infoId) {\r\n        var _clayerInfo = this._getLayerInfoById(infoId);\r\n        var pos = this._layerInfosFromMap.indexOf(_clayerInfo);\r\n        this._layerInfosFromMap.splice(pos, 1);\r\n      },\r\n\r\n      removeConfigInfo: function(infoId) {\r\n        if (lang.getObject('config.layerInfos', false, this)) {\r\n          var len = this.config.layerInfos.length;\r\n          for (var i = 0; i < len; i++) {\r\n            if (this.config.layerInfos[i].id === infoId) {\r\n              if (this.featureTableSet[infoId]) {\r\n                this.featureTableSet[infoId].destroy();\r\n                delete this.featureTableSet[infoId];\r\n              }\r\n              this.config.layerInfos.splice(i, 1);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      // def.resolve({\r\n      //   isSupportQuery: tableInfo.isSupportQuery,\r\n      //   table: this.featureTableSet[tabId] // instance of _FeatureTable\r\n      // });\r\n      // tabId: id of layerInfo\r\n      getQueryTable: function(tabId, enabledMatchingMap, hideExportButton, allowTextSelection) {\r\n        var def = new Deferred();\r\n        this._activeLayerInfoId = tabId;\r\n\r\n        if (!this.featureTableSet[tabId]) {\r\n          this._getQueryTableInfo(tabId).then(lang.hitch(this, function(queryTableInfo) {\r\n            if (!queryTableInfo) {\r\n              def.resolve(null);\r\n              return;\r\n            }\r\n\r\n            var activeLayerInfo = queryTableInfo.layerInfo;\r\n            var layerObject = queryTableInfo.layerObject;\r\n            var tableInfo = queryTableInfo.tableInfo;\r\n            // prevent create duplicate table\r\n            // for asychronous request in both queryTable and queryRelationTable\r\n            if (this.featureTableSet[tabId]) {\r\n              def.resolve({\r\n                isSupportQuery: tableInfo.isSupportQuery,\r\n                table: this.featureTableSet[tabId]\r\n              });\r\n              return;\r\n            }\r\n\r\n            if (lang.getObject('isSupportQuery', false, tableInfo)) {\r\n              var configInfo = this._getConfigInfoById(tabId);\r\n              if (!configInfo) {\r\n                this.addConfigInfo(activeLayerInfo);\r\n                configInfo = this._getConfigInfoById(tabId);\r\n              }\r\n              var configFields = lang.getObject('layer.fields', false, configInfo);\r\n              var layerFields = layerObject && layerObject.fields;\r\n              // add arcade expression fields if any\r\n              layerFields = attrUtils.arcade.appendArcadeExpressionsToFields(layerFields, activeLayerInfo);\r\n              // remove fields not exist in layerObject.fields\r\n              configInfo.layer.fields = this._clipValidFields(\r\n                configFields,\r\n                layerFields\r\n              );\r\n\r\n              var table = new _FeatureTable({\r\n                widgetId: this.widgetId,\r\n                map: this.map,\r\n                matchingMap: enabledMatchingMap,\r\n                hideExportButton: hideExportButton,\r\n                allowTextSelection: allowTextSelection,\r\n                layerInfo: activeLayerInfo,\r\n                configedInfo: configInfo,\r\n                nls: this.nls,\r\n                parent: this.parent\r\n              });\r\n              //Once the feature is selected in the table\r\n              //Create selection object for all the layers\r\n              table.onFeatureSelectionChange = lang.hitch(this, function () {\r\n                var selectionInfo = {};\r\n                for (var layer in this.featureTableSet) {\r\n                  if (this.featureTableSet[layer]) {\r\n                    selectionInfo[layer] = this.featureTableSet[layer][\"selectionRows\"] || [];\r\n                  }\r\n                }\r\n                this.onFeatureSelectionChange(selectionInfo);\r\n              });\r\n              this.featureTableSet[tabId] = table;\r\n              def.resolve({\r\n                isSupportQuery: tableInfo.isSupportQuery,\r\n                table: table\r\n              });\r\n            } else {\r\n              def.resolve({\r\n                isSupportQuery: false\r\n              });\r\n            }\r\n          }), function(err) {\r\n            def.reject(err);\r\n          });\r\n        } else {\r\n          def.resolve({\r\n            isSupportQuery: true,\r\n            table: this.featureTableSet[tabId]\r\n          });\r\n        }\r\n\r\n        return def;\r\n      },\r\n\r\n      getRelationTable: function(originalInfoId, key, enabledMatchingMap, hideExportButton, allowTextSelection) {\r\n        var def = new Deferred();\r\n        var currentShip = this.relationshipsSet[key];\r\n        this._activeRelationshipKey = key;\r\n\r\n        if (currentShip) {\r\n          var originalInfo = this._getLayerInfoById(originalInfoId);\r\n          var currentShipInfo = this.getRelationShipInfo(currentShip);\r\n\r\n          this.getQueryTable(currentShipInfo.id, enabledMatchingMap, hideExportButton, allowTextSelection)\r\n          .then(lang.hitch(this, function(tableResult) {\r\n            if (tableResult && tableResult.table) {\r\n              var table = tableResult.table;\r\n              if(!jimuUtils.isEqual(table.relationship, currentShip)) { // reset related query if relationship is different\r\n                table.set('prevRelationship', table.relationship);\r\n                table.set('relationship', currentShip);\r\n              }\r\n              table.set('relatedOriginalInfo', originalInfo);\r\n            }\r\n            def.resolve(tableResult);\r\n          }), lang.hitch(function() {\r\n            def.resolve(null);\r\n          }));\r\n        } else {\r\n          def.resolve(null);\r\n        }\r\n\r\n        return def;\r\n      },\r\n\r\n      removeRelationTable: function(relationShipKey) {\r\n        if (this.relationshipTableSet[relationShipKey]) {\r\n          this.relationshipTableSet[relationShipKey].destroy();\r\n          this.relationshipTableSet[relationShipKey] = null;\r\n        }\r\n      },\r\n\r\n      getCurrentTable: function(key) {\r\n        return this.featureTableSet[key] || this.relationshipTableSet[key];\r\n      },\r\n\r\n      collectRelationShips: function(layerInfo, relatedTableInfos) {\r\n        this._collectRelationShips(layerInfo, layerInfo.layerObject, relatedTableInfos);\r\n      },\r\n\r\n      getConfigInfoById: function(id) {\r\n        return this._getConfigInfoById(id);\r\n      },\r\n\r\n      getLayerInfoById: function(id) {\r\n        return this._getLayerInfoById(id);\r\n      },\r\n\r\n      getVisivleLayerInfoIndexById: function(id) {\r\n        return this._getVisivleLayerInfoIndexById(id);\r\n      },\r\n\r\n      getRelationshipsByInfoId: function(id) {\r\n        var ships = [];\r\n        for (var p in this.relationshipsSet) {\r\n          var ship = this.relationshipsSet[p];\r\n          if (ship._layerInfoId === id) {\r\n            ships.push(ship);\r\n          }\r\n        }\r\n\r\n        return ships;\r\n      },\r\n\r\n      getRelationShipInfo: function(relationship) {\r\n        var relInfo;\r\n        if(relationship) {\r\n          for(var relKey in this.relationshipInfoMapping) {\r\n            if(relationship._relKey === relKey) {\r\n              relInfo = this.relationshipInfoMapping[relKey];\r\n            }\r\n          }\r\n        }\r\n        return relInfo;\r\n      },\r\n\r\n      empty: function() {\r\n        this._delayedLayerInfos = [];\r\n        this._layerInfosFromMap = [];\r\n        this.featureTableSet = {};\r\n        for (var p in this.relationshipsSet) {\r\n          var ship = this.relationshipsSet[p];\r\n          this._removeRelationShipInfo(ship);\r\n        }\r\n        this.relationshipsSet = {};\r\n        this.relationshipTableSet = {};\r\n        this.currentRelationshipKey = null;\r\n        this.config = null;\r\n        this.map = null;\r\n        this.nls = null;\r\n      },\r\n\r\n      _processDelayedLayerInfos: function() { // must be invoke after initialize this._layerInfos\r\n        if (this._delayedLayerInfos.length > 0) {\r\n          array.forEach(this._delayedLayerInfos, lang.hitch(this, function(delayedLayerInfo) {\r\n            if (!this._getLayerInfoById(delayedLayerInfo && delayedLayerInfo.id) &&\r\n              this.map && this.map.getLayer(delayedLayerInfo.id)) {\r\n              this._layerInfosFromMap.push(delayedLayerInfo);\r\n            }\r\n          }));\r\n\r\n          this._delayedLayerInfos = [];\r\n        }\r\n      },\r\n\r\n      _getLayerInfoById: function(layerId) {\r\n        for (var i = 0, len = this._layerInfosFromMap.length; i < len; i++) {\r\n          if (this._layerInfosFromMap[i] && this._layerInfosFromMap[i].id === layerId) {\r\n            return this._layerInfosFromMap[i];\r\n          }\r\n        }\r\n      },\r\n\r\n      _getVisivleLayerInfoIndexById: function(layerId) {\r\n        var counter = -1;\r\n        for (var i = 0, len = this._layerInfosFromMap.length; i < len; i++) {\r\n          if (this._layerInfosFromMap[i] && this._layerInfosFromMap[i].isShowInMap()) {\r\n            counter++;\r\n            if(this._layerInfosFromMap[i].id === layerId) {\r\n              return counter;\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      _getConfigInfoById: function(id) {\r\n        if (!lang.getObject('layerInfos.length', false, this.config)) {\r\n          return null;\r\n        }\r\n\r\n        for (var i = 0, len = this.config.layerInfos.length; i < len; i++) {\r\n          var configInfo = this.config.layerInfos[i];\r\n          if (configInfo && configInfo.id === id) {\r\n            return configInfo;\r\n          }\r\n        }\r\n\r\n        return null;\r\n      },\r\n\r\n\r\n      // def.resolve({\r\n      //         layerInfo: activeLayerInfo,\r\n      //         layerObject: layerObject,\r\n      //         tableInfo: tableInfo\r\n      //       });\r\n      _getQueryTableInfo: function(tabId) {\r\n        var def = new Deferred();\r\n        var activeLayerInfo = this._getLayerInfoById(tabId);\r\n\r\n        if (!activeLayerInfo) {\r\n          console.error(\"no activeLayerInfo!\");\r\n          def.reject(new Error());\r\n        } else {\r\n          var defs = [];\r\n          var hasUrl = activeLayerInfo.getUrl();\r\n          defs.push(activeLayerInfo.getLayerObject());\r\n          defs.push(activeLayerInfo.getSupportTableInfo());\r\n          if (hasUrl) {\r\n            defs.push(activeLayerInfo.getRelatedTableInfoArray());\r\n          }\r\n\r\n          all(defs).then(lang.hitch(this, function(results) {\r\n            if (this._activeLayerInfoId !== tabId || !results) {\r\n              def.resolve(null);\r\n              return;\r\n            }\r\n            var layerObject = results[0];\r\n            var tableInfo = results[1];\r\n            var relatedTableInfos = hasUrl ? results[2] : [];\r\n\r\n            if (esriLang.isDefined(relatedTableInfos) && esriLang.isDefined(layerObject) &&\r\n              relatedTableInfos.length > 0) {\r\n              this._collectRelationShips(activeLayerInfo, layerObject, relatedTableInfos);\r\n            }\r\n\r\n            def.resolve({\r\n              layerInfo: activeLayerInfo,\r\n              layerObject: layerObject,\r\n              tableInfo: tableInfo\r\n            });\r\n          }), function(err) {\r\n            def.reject(err);\r\n          });\r\n        }\r\n\r\n        return def;\r\n      },\r\n\r\n      _collectRelationShips: function(layerInfo, layerObject, relatedTableInfos) {\r\n        var ships = layerObject.relationships;\r\n        if (ships && ships.length > 0 && layerObject && layerObject.url) {\r\n          var layerUrl = layerObject.url;\r\n          var parts = layerUrl.split('/');\r\n\r\n          array.forEach(ships, lang.hitch(this, function(ship) {\r\n            parts[parts.length - 1] = ship.relatedTableId;\r\n            var relationUrl = parts.join('/');\r\n\r\n            var tableInfos = array.filter(relatedTableInfos, lang.hitch(this, function(tableInfo) {\r\n              var tableInfoUrl = tableInfo.getUrl();\r\n\r\n              return esriLang.isDefined(tableInfoUrl) && esriLang.isDefined(relationUrl) &&\r\n                (portalUrlUtils.removeProtocol(tableInfoUrl.toString().toLowerCase()) ===\r\n                portalUrlUtils.removeProtocol(relationUrl.toString().toLowerCase()));\r\n            }));\r\n\r\n            var relKey = layerInfo.id + '_' + ship.name + '_' + ship.id;\r\n            ship._relKey = relKey;\r\n            ship._layerInfoId = layerInfo.id;\r\n\r\n            if (tableInfos && tableInfos.length > 0) {\r\n              this._setRelationShipInfo(ship, tableInfos[0]);\r\n            }\r\n\r\n            if (!this.relationshipsSet[relKey]) {\r\n              this.relationshipsSet[relKey] = ship;\r\n              this.relationshipsSet[relKey].objectIdField = layerObject.objectIdField;\r\n            }\r\n          }));\r\n        }\r\n      },\r\n\r\n      _setRelationShipInfo: function(relationship, tableInfo) {\r\n        if(!(relationship && ('_relKey' in relationship))) {\r\n          return;\r\n        }\r\n        this.relationshipInfoMapping[relationship._relKey] = tableInfo;\r\n      },\r\n\r\n      _removeRelationShipInfo: function(relationship) {\r\n        if(!(relationship && ('_relKey' in relationship))) {\r\n          return;\r\n        }\r\n        for(var relKey in this.relationshipInfoMapping) {\r\n          if(relationship._relKey === relKey) {\r\n            delete this.relationshipInfoMapping[relKey];\r\n          }\r\n        }\r\n      },\r\n\r\n      _getLayerInfoLabel: function(layerInfo) {\r\n        var label = layerInfo.name || layerInfo.title;\r\n        return label;\r\n      },\r\n\r\n      _getLayerInfoId: function(layerInfo) {\r\n        return layerInfo && layerInfo.id || \"\";\r\n      },\r\n\r\n      _clipValidFields: function(sFields, rFields) {\r\n        if (!(sFields && sFields.length)) {\r\n          return rFields || [];\r\n        }\r\n        if (!(rFields && rFields.length)) {\r\n          return sFields;\r\n        }\r\n        var validFields = [],\r\n            newFields = [];\r\n        // find new fields\r\n        for (var i = 0, len = rFields.length; i < len; i++) {\r\n          var rf = rFields[i];\r\n          for (var j = 0, len2 = sFields.length; j < len2; j++) {\r\n            var sf = sFields[j];\r\n            if (sf.name === rf.name) {\r\n              break;\r\n            }\r\n          }\r\n          // is a new field\r\n          if(j === len2) {\r\n            newFields.push(rf);\r\n          }\r\n        }\r\n        // valid fields\r\n        for (var i = 0, len = sFields.length; i < len; i++) {\r\n          var sf = sFields[i];\r\n          for (var j = 0, len2 = rFields.length; j < len2; j++) {\r\n            var rf = rFields[j];\r\n            if (rf.name === sf.name) {\r\n              validFields.push(sf);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n        // concatenates new fields to the valid fields\r\n        validFields = validFields.concat(newFields);\r\n\r\n        if(validFields.length === 0 && sFields.length > 0){\r\n          var fieldInfos = lang.clone(rFields);\r\n          array.forEach(fieldInfos, lang.hitch(this, function(fieldInfo){\r\n            if(fieldInfo.type !== 'esriFieldTypeGeometry'){\r\n              fieldInfo.show = true;\r\n              validFields.push(fieldInfo);\r\n            }\r\n          }));\r\n        }\r\n\r\n        return validFields;\r\n      }\r\n    });\r\n  });\r\n"]}