{"version":3,"sources":["../../../widgets/AttributeTable/utils.js"],"names":["define","lang","array","LayerInfos","Deferred","all","on","exports","Observable","Cache","Memory","esriLang","FeatureLayerQueryStore","ArcadeUtils","ArcadeExpression","popupProfile","utils","Graphic","nls","readLayerInfosObj","map","getInstance","itemInfo","readLayerInfosFromMap","original","excludeMapNotes","def","then","hitch","layerInfosObj","layerInfos","traversalLayerInfosOfWebmap","layerInfo","push","traversal","mapNoteIds","mnLayerInfos","getMapNotesLayerInfoArray","forEach","mnLayerInfo","id","filter","indexOf","tableInfos","getTableInfoArray","concat","resolve","err","console","error","reject","promise","generateColumnsFromFields","gridColumns","expressionCache","fields","typeIdField","types","supportsOrder","supportsStatistics","layerObject","getFormatInfo","field","fieldName","name","pInfos","isDefined","fieldInfos","i","len","length","f","format","defaultFormatInfo","getDefaultPortalFieldInfo","getIsHidden","techFieldName","hidden","show","getPopupInfo","getPopupInfoFromLayerObject","columns","selectionHandle","label","className","unhidable","sortable","_cache","statistics","renderCell","object","value","node","setAttribute","selectionHandleLabel","_field","isDomain","domain","isDate","type","isTypeIdField","isNumber","isString","isArcadeExpression","alias","_pk","formatter","urlFormatter","dateFormatter","numberFormatter","domainType","get","obj","getRangeDomainValue","getCodeValue","getTypeName","layerDefinition","getFeatureLayerDefinition","isAsync","exprName","split","singleExprCache","span","document","createElement","innerText","jimuNls","common","style","listener","arcade","getAttributes","remove","computedAttrs","codeValue","typeChecks","item","typeCheck","domains","codedValues","_value","isFinite","fieldFormatter","attributes","result","getDisplayValueForCodedValueOrSubtype","isCodedValueOrSubtype","displayValue","str","getFormattedUrl","dateNumber","getFormattedDate","num","getFormattedNumber","readLayerObjectsFromMap","defs","getLayerObject","layerObjects","readSupportTableInfoFromLayerInfos","getSupportTableInfo","_tInfos","clone","tInfo","idx","readConfigLayerInfosFromMap","ret","tableInfo","isSupportedLayer","title","getConfigInfosFromLayerInfos","getConfigInfoFromLayerInfo","json","isShowInMap","layer","url","getUrl","popupInfo","description","fieldInfo","visible","layerFields","getObject","clipValidFields","hasVisibleFields","some","warn","generateCacheStore","_layer","recordCounts","batchCount","whereClause","extent","qtStore","objectIds","_objectIds","totalCount","where","spatialFilter","mStore","generateMemoryStore","data","idProperty","merge","dest","source","key","cb","sourceIds","syncOrderWith","ref","isArray","getKeys","k","destKeys","order","splice","getExpressionInfosFromLayer","profiles","readExprInfo","getArcadeProfilesByType","expressionInfos","getExpressionInfosFromLayerInfo","pInfo","graphic","geometry","customExpr","getAsynAttributesFromCustomArcadeExpr","appendArcadeExpressionsToFields","ofields","arcadeExpressions","prefix","re","RegExp","exp","ofield","test","ofieldExprName","substr","isArcadeExpressionField","parseArcadeExpressions","InfoTemplate","_parseArcadeExpressions","getSortbyFields","grid","sortFields","layerOID","objectIdField","attribute","descending","sFields","rFields","validFields","sf","j","len2","rf"],"mappings":"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","file":"utils.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////\r\n// Copyright © Esri. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//    http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\ndefine(['dojo/_base/lang',\r\n  'dojo/_base/array',\r\n  'jimu/LayerInfos/LayerInfos',\r\n  'dojo/Deferred',\r\n  'dojo/promise/all',\r\n  'dojo/on',\r\n  'exports',\r\n  \"dojo/store/Observable\",\r\n  \"dojo/store/Cache\",\r\n  \"dojo/store/Memory\",\r\n  \"esri/lang\",\r\n  './table/FeatureLayerQueryStore',\r\n  \"jimu/ArcadeUtils\",\r\n  \"esri/ArcadeExpression\",\r\n  'esri/arcadeProfiles/popupProfile',\r\n  'jimu/utils',\r\n  'esri/graphic',\r\n  'dojo/i18n!./nls/strings'\r\n], function(\r\n  lang, array, LayerInfos, Deferred, all, on,\r\n  exports, Observable, Cache, Memory, esriLang,\r\n  FeatureLayerQueryStore, ArcadeUtils, ArcadeExpression, popupProfile, utils, Graphic, nls\r\n) {\r\n  exports.readLayerInfosObj = function(map) {\r\n    return LayerInfos.getInstance(map, map.itemInfo);\r\n  };\r\n\r\n  /*\r\n  original: boolean; if true only get layerinfos from data of webmap;\r\n  excludeMapNotes: boolean; if true exclude map notes.\r\n\r\n  resovlue layerinfos array\r\n   */\r\n  exports.readLayerInfosFromMap = function(map, original, excludeMapNotes) {\r\n    var def = new Deferred();\r\n    LayerInfos.getInstance(map, map.itemInfo).then(lang.hitch(this, function(layerInfosObj) {\r\n      var layerInfos = [];\r\n      if (original) {\r\n        layerInfosObj.traversalLayerInfosOfWebmap(function(layerInfo) {\r\n          layerInfos.push(layerInfo);\r\n        });\r\n      } else {\r\n        layerInfosObj.traversal(function(layerInfo) {\r\n          layerInfos.push(layerInfo);\r\n        });\r\n      }\r\n\r\n\r\n      if (excludeMapNotes) {\r\n        var mapNoteIds = [];\r\n        var mnLayerInfos = layerInfosObj.getMapNotesLayerInfoArray();\r\n        array.forEach(mnLayerInfos, function(mnLayerInfo) {\r\n          mapNoteIds.push(mnLayerInfo.id);\r\n          mnLayerInfo.traversal(function(mnLayerInfo) {\r\n            mapNoteIds.push(mnLayerInfo.id);\r\n          });\r\n        });\r\n        layerInfos = array.filter(layerInfos, function(layerInfo) {\r\n          return mapNoteIds.indexOf(layerInfo.id) === -1;\r\n        });\r\n      }\r\n\r\n      var tableInfos = layerInfosObj.getTableInfoArray();\r\n      layerInfos = layerInfos.concat(tableInfos);\r\n\r\n      def.resolve(layerInfos);\r\n    }), lang.hitch(this, function(err) {\r\n      console.error(err);\r\n      def.reject(err);\r\n    }));\r\n\r\n    return def.promise;\r\n  };\r\n\r\n  //return {selectionHandle,field0,field1,...}\r\n  //used to create dgrid\r\n  //\r\n  //pInfos: PopupInfo\r\n  exports.generateColumnsFromFields = function(gridColumns, map, layerInfo, expressionCache, fields, typeIdField, types,\r\n    supportsOrder, supportsStatistics, layerObject) {\r\n    function getFormatInfo(field) {\r\n      var fieldName = field.name;\r\n      if (pInfos && esriLang.isDefined(pInfos.fieldInfos)) {\r\n        for (var i = 0, len = pInfos.fieldInfos.length; i < len; i++) {\r\n          var f = pInfos.fieldInfos[i];\r\n          if (f.fieldName === fieldName && f.format) {\r\n            return f.format;\r\n          }\r\n        }\r\n      }\r\n      // use default format from Portal instead:\r\n      var defaultFormatInfo = utils.getDefaultPortalFieldInfo(field);\r\n      if(defaultFormatInfo && defaultFormatInfo.format) {\r\n        return defaultFormatInfo.format;\r\n      }\r\n\r\n      return null;\r\n    }\r\n\r\n    function getIsHidden(techFieldName, field) {\r\n      // Overriding order of column's \"hidden\" property:\r\n      // grid's column settings --> Attribute Table's settings -->\r\n      // Field configuration from map popup --> default field visibilities from the layer / table\r\n      if(gridColumns && gridColumns[techFieldName]) {\r\n        return gridColumns[techFieldName].hidden;\r\n      } else if (field) {\r\n        return !field.show && esriLang.isDefined(field.show);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    var pInfos = layerInfo.getPopupInfo() ||\r\n    layerInfo.getPopupInfoFromLayerObject &&layerInfo.getPopupInfoFromLayerObject();\r\n\r\n    var columns = {};\r\n    columns.selectionHandle = {\r\n      label: \"\",\r\n      className: \"selection-handle-column\",\r\n      hidden: false,\r\n      unhidable: true, // if true the field never display in toogle column menu\r\n      field: null,\r\n      sortable: false, // prevent default behavior of dgrid\r\n      _cache: { // control the menu item when click the column of dgrid\r\n        sortable: false,\r\n        statistics: false\r\n      },\r\n      renderCell: function(object, value, node) {\r\n        node.setAttribute('role', 'button');\r\n        node.setAttribute('title', nls.selectionHandleLabel);\r\n      }\r\n\r\n      // get: function(){}, get value for cell\r\n      // formatter: function(){}, format value of cell\r\n    };\r\n    array.forEach(fields, lang.hitch(exports, function(_field, i, fields) {\r\n      var techFieldName = \"field\" + i;\r\n      var isDomain = !!_field.domain;\r\n      var isDate = _field.type === \"esriFieldTypeDate\";\r\n      var isTypeIdField = typeIdField && (_field.name === typeIdField);\r\n      var isNumber = _field.type === \"esriFieldTypeDouble\" ||\r\n        _field.type === \"esriFieldTypeSingle\" ||\r\n        _field.type === \"esriFieldTypeInteger\" ||\r\n        _field.type === \"esriFieldTypeSmallInteger\";\r\n      var isString = _field.type === \"esriFieldTypeString\";\r\n      var isArcadeExpression = _field.name.indexOf('expression/') === 0;\r\n\r\n      columns[techFieldName] = {\r\n        label: _field.alias || _field.name,\r\n        className: techFieldName,\r\n        hidden: fields.length === 1 ? false : getIsHidden(techFieldName, _field),\r\n        unhidable: fields.length === 1 ? false :\r\n          !_field.show && esriLang.isDefined(_field.show) && _field._pk,\r\n        field: _field.name,\r\n        sortable: false,\r\n        _cache: {\r\n          sortable: !!supportsOrder,\r\n          statistics: supportsStatistics && !isDomain && isNumber\r\n        }\r\n      };\r\n\r\n      if (isArcadeExpression) { // arcade field can not get _field.type\r\n        columns[techFieldName].formatter = lang.hitch(exports, exports.urlFormatter);\r\n      } else {\r\n        if (isString) {\r\n          columns[techFieldName].formatter = lang.hitch(exports, exports.urlFormatter);\r\n        } else if (isDate) {\r\n          columns[techFieldName].formatter = lang.hitch(\r\n            exports, exports.dateFormatter, getFormatInfo(_field));\r\n        } else if (isNumber) {\r\n          columns[techFieldName].formatter = lang.hitch(\r\n            exports, exports.numberFormatter, getFormatInfo(_field));\r\n        }\r\n      }\r\n\r\n      // obj is feature.attributes in the store.\r\n      if (isDomain) {\r\n        var domainType = _field.domain && _field.domain.type;\r\n        if(domainType === 'range') {\r\n          // range\r\n          columns[techFieldName].get = lang.hitch(exports, function(layerObject, field, obj) {\r\n            return this.getRangeDomainValue(field.name, obj);\r\n          }, layerObject, _field);\r\n        } else {\r\n          // coded value\r\n          columns[techFieldName].get = lang.hitch(exports, function(layerObject, field, obj) {\r\n            return this.getCodeValue(layerObject, field.name, obj);\r\n          }, layerObject, _field);\r\n        }\r\n      } else if(isTypeIdField) {\r\n        columns[techFieldName].get = lang.hitch(exports, function(field, types, obj) {\r\n          return this.getTypeName(obj[field.name], types);\r\n        }, _field, types);\r\n      } else if(isArcadeExpression) {\r\n        var layerDefinition = utils.getFeatureLayerDefinition(layerObject);\r\n        // expression columns are not sotable\r\n        columns[techFieldName]._cache.sortable = false;\r\n\r\n        var isAsync = ArcadeUtils.isAsync(_field.name, expressionCache);\r\n        var exprName = _field.name.split('expression/')[1]\r\n        var singleExprCache = {}\r\n        singleExprCache[exprName] = expressionCache[exprName];\r\n\r\n        if(isAsync) {\r\n          columns[techFieldName].renderCell = lang.hitch(this, function(singleExprCache, field, obj) {\r\n            var span = document.createElement('span');\r\n            span.innerText = jimuNls.common.show;\r\n            span.style = 'cursor: pointer; text-decoration: underline; color: #518dca;';\r\n            var listener = on(span, 'click', lang.hitch(this, function() {\r\n              this.arcade.getAttributes(obj, singleExprCache, layerObject, map)[field.name].then(function(value){\r\n                span.style = 'cursor: inherit; text-decoration: inherit; color: inherit;';\r\n                span.innerText = value || ''\r\n              }), lang.hitch(this, function(err) {\r\n                def.reject(err);\r\n                span.style = 'cursor: inherit; text-decoration: inherit; color: inherit;';\r\n                span.innerText = ''\r\n              });\r\n              // Remove click listener\r\n              listener.remove();\r\n            }))\r\n            return span;\r\n          }, singleExprCache, _field);\r\n        }\r\n        else {\r\n          columns[techFieldName].get = lang.hitch(exports, function(singleExprCache, field, layerDefinition, obj) {\r\n            var computedAttrs = this.arcade.getAttributes(obj, singleExprCache, layerDefinition, map);\r\n            return computedAttrs[field.name] || '';\r\n          }, singleExprCache, _field, layerDefinition);\r\n        }\r\n\r\n      } else if (!isDomain && !isDate && !isTypeIdField && !isArcadeExpression) {\r\n        // Not A Date, Domain or Type Field\r\n        // Still need to check for subclass value\r\n        columns[techFieldName].get = lang.hitch(exports,\r\n          function(layerObject, field, typeIdField, types, obj) {\r\n            var codeValue = null;\r\n            if (typeIdField && types && types.length > 0) {\r\n              var typeChecks = array.filter(types, lang.hitch(exports, function(item) {\r\n                // value of typeIdFild has been changed above\r\n                return item.id === obj[typeIdField];\r\n              }));\r\n              var typeCheck = (typeChecks && typeChecks[0]) || null;\r\n\r\n              if (typeCheck && typeCheck.domains &&\r\n                typeCheck.domains[field.name] && typeCheck.domains[field.name].codedValues) {\r\n                codeValue = this.getCodeValue(\r\n                  layerObject,\r\n                  field.name,\r\n                  obj\r\n                );\r\n              }\r\n            }\r\n            var _value = codeValue !== null ? codeValue : obj[field.name];\r\n            return _value || isFinite(_value) ? _value : \"\";\r\n          }, layerObject, _field, typeIdField, types);\r\n      }\r\n    }));\r\n\r\n    return columns;\r\n  };\r\n\r\n  exports.getTypeName = function(value, types) {\r\n    return utils.fieldFormatter.getTypeName(value, types);\r\n  };\r\n\r\n  exports.getCodeValue = function(layerObject, fieldName, attributes) {\r\n    var result = utils.getDisplayValueForCodedValueOrSubtype(layerObject, fieldName, attributes);\r\n    if (result && result.isCodedValueOrSubtype) {\r\n      return result.displayValue || attributes[fieldName] || '';\r\n    }\r\n    return attributes[fieldName] || '';\r\n  };\r\n\r\n  exports.getRangeDomainValue = function(fieldName, attributes) {\r\n    var result = attributes[fieldName];\r\n    if (result) {\r\n      return result;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  exports.urlFormatter = function(str) {\r\n    return utils.fieldFormatter.getFormattedUrl(str);\r\n  };\r\n\r\n  exports.dateFormatter = function(format, dateNumber) {\r\n    return utils.fieldFormatter.getFormattedDate(dateNumber, format);\r\n  };\r\n\r\n  exports.numberFormatter = function(format, num) {\r\n    return utils.fieldFormatter.getFormattedNumber(num, format);\r\n  };\r\n\r\n  exports.readLayerObjectsFromMap = function(map, original, excludeMapNotes) {\r\n    var def = new Deferred(),\r\n      defs = [];\r\n    this.readLayerInfosFromMap(map, original, excludeMapNotes)\r\n    .then(lang.hitch(this, function(layerInfos) {\r\n      array.forEach(layerInfos, lang.hitch(this, function(layerInfo) {\r\n        defs.push(layerInfo.getLayerObject());\r\n      }));\r\n\r\n      all(defs).then(lang.hitch(this, function(layerObjects) {\r\n        def.resolve(layerObjects);\r\n      }), lang.hitch(this, function(err) {\r\n        def.reject(err);\r\n        console.error(err);\r\n      }));\r\n    }), lang.hitch(this, function(err) {\r\n      def.reject(err);\r\n    }));\r\n\r\n    return def.promise;\r\n  };\r\n\r\n  // resolve [{\r\n  //      isSupportedLayer: true/false,\r\n  //      isSupportQuery: true/false,\r\n  //      layerType: layerType.\r\n  //    }]\r\n  exports.readSupportTableInfoFromLayerInfos = function(layerInfos) {\r\n    var def = new Deferred();\r\n    var defs = [];\r\n    array.forEach(layerInfos, lang.hitch(this, function(layerInfo) {\r\n      defs.push(layerInfo.getSupportTableInfo());\r\n    }));\r\n\r\n    all(defs).then(lang.hitch(this, function(tableInfos) {\r\n      var _tInfos = lang.clone(tableInfos);\r\n      array.forEach(_tInfos, function(tInfo, idx) {\r\n        tInfo.id = layerInfos[idx].id;\r\n      });\r\n      def.resolve(_tInfos);\r\n    }), function(err) {\r\n      def.reject(err);\r\n    });\r\n\r\n    return def.promise;\r\n  };\r\n\r\n  // get layerInfos array which isSupportedLayer is true;\r\n  exports.readConfigLayerInfosFromMap = function(map, original, excludeMapNotes) {\r\n    var def = new Deferred(),\r\n      defs = [];\r\n    this.readLayerInfosFromMap(map, original, excludeMapNotes)\r\n    .then(lang.hitch(this, function(layerInfos) {\r\n      var ret = [];\r\n      array.forEach(layerInfos, function(layerInfo) {\r\n        defs.push(layerInfo.getSupportTableInfo());\r\n      });\r\n\r\n      all(defs).then(lang.hitch(this, function(tableInfos) {\r\n        array.forEach(tableInfos, lang.hitch(this, function(tableInfo, i) {\r\n          if (tableInfo.isSupportedLayer) {\r\n            layerInfos[i].name = layerInfos[i].title;\r\n            ret.push(layerInfos[i]);\r\n          }\r\n        }));\r\n\r\n        def.resolve(ret);\r\n      }), lang.hitch(this, function(err) {\r\n        def.reject(err);\r\n      }));\r\n    }), lang.hitch(this, function(err) {\r\n      def.reject(err);\r\n    }));\r\n\r\n    return def.promise;\r\n  };\r\n\r\n  exports.getConfigInfosFromLayerInfos = function(layerInfos) {\r\n    return array.map(layerInfos, function(layerInfo) {\r\n      return exports.getConfigInfoFromLayerInfo(layerInfo);\r\n    });\r\n  };\r\n  // if config is null, use this method to get default content.\r\n  exports.getConfigInfoFromLayerInfo = function(layerInfo) {\r\n    var json = {};\r\n    json.name = layerInfo.name || layerInfo.title;\r\n    json.id = layerInfo.id;\r\n    json.show = layerInfo.isShowInMap();\r\n    json.layer = {\r\n      url: layerInfo.getUrl()\r\n    };\r\n\r\n    var popupInfo = layerInfo.getPopupInfo();\r\n    if (popupInfo && !popupInfo.description) {\r\n      json.layer.fields = array.map(popupInfo.fieldInfos, function(fieldInfo) {\r\n        return {\r\n          name: fieldInfo.fieldName,\r\n          alias: fieldInfo.label,\r\n          show: fieldInfo.visible,\r\n          format: fieldInfo.format\r\n        };\r\n      });\r\n\r\n      // remove fields not exist in layerObject.fields\r\n      var layerFields = lang.getObject('layerObject.fields', false, layerInfo);\r\n      json.layer.fields = clipValidFields(json.layer.fields, layerFields);\r\n\r\n      var hasVisibleFields = array.some(json.layer.fields, function(f) {\r\n        return f.show;\r\n      });\r\n      if (!hasVisibleFields) {\r\n        //If layer schema changes, the fields info in webmap may not match with the layer field info\r\n        //and the fields array may be empty.\r\n        if(json.layer.fields && json.layer.fields.length > 0){\r\n          json.layer.fields[0].show = true;\r\n        }else{\r\n          console.warn('We do not get fields info.');\r\n        }\r\n      }\r\n    }\r\n\r\n    return json;\r\n  };\r\n\r\n  exports.generateCacheStore = function(_layer, recordCounts, batchCount, whereClause, extent) {\r\n    var qtStore = new FeatureLayerQueryStore({\r\n      layer: _layer,\r\n      objectIds: _layer._objectIds || null,\r\n      totalCount: recordCounts,\r\n      batchCount: batchCount,\r\n      where: whereClause || \"1=1\",\r\n      spatialFilter: extent\r\n    });\r\n\r\n    var mStore = new Memory();\r\n    return (new Cache(qtStore, mStore, {}));\r\n  };\r\n\r\n  exports.generateMemoryStore = function(data, idProperty) {\r\n    return (new Observable(new Memory({\r\n      \"data\": data || [],\r\n      \"idProperty\": idProperty\r\n    })));\r\n  };\r\n\r\n  exports.merge = function(dest, source, key, cb){\r\n    var sourceIds = array.map(source, function(item) {\r\n      return item[key];\r\n    });\r\n    for (var i = 0, len = dest.length; i < len; i++) {\r\n      var idx = sourceIds.indexOf(dest[i][key]);\r\n      if (idx > -1) {\r\n        cb(dest[i], source[idx]);\r\n      }\r\n    }\r\n  };\r\n\r\n  exports.syncOrderWith = function(dest, ref, key) {\r\n    if (!lang.isArray(ref) || !key) {\r\n      return dest;\r\n    }\r\n    function getKeys(dest, k) {\r\n      return array.map(dest, function(item) {\r\n        return item[k];\r\n      });\r\n    }\r\n    var destKeys = getKeys(dest, key);\r\n    var order = [];\r\n    for (var i = 0, len = ref.length; i < len; i++) {\r\n      var idx = destKeys.indexOf(ref[i][key]);\r\n      if (idx > -1) {\r\n        order = order.concat(dest.splice(idx, 1));\r\n        destKeys = getKeys(dest, key);\r\n      }\r\n    }\r\n    return order.concat(dest);\r\n  };\r\n\r\n  exports.arcade = {};\r\n\r\n  // get arcade expressions from single layer\r\n  exports.arcade.getExpressionInfosFromLayer = function(map, layer) {\r\n    var profiles = ArcadeUtils.readExprInfo.getArcadeProfilesByType(map, layer, 'infoTemplate');\r\n    if(profiles.length > 0 && profiles[0].expressionInfos) {\r\n      return profiles[0].expressionInfos;\r\n    }\r\n    return [];\r\n  };\r\n\r\n  // get arcade expressions from single layerInfo\r\n  exports.arcade.getExpressionInfosFromLayerInfo = function(layerInfo) {\r\n    var pInfo = layerInfo && layerInfo.getPopupInfo();\r\n    return pInfo && pInfo.expressionInfos || [];\r\n  };\r\n\r\n  // get attributes with expression values\r\n  exports.arcade.getAttributes = function(attributes, singleExprCache, layer, map) {\r\n    var graphic = new Graphic(attributes.geometry, null, attributes);\r\n    return ArcadeUtils.customExpr.getAsynAttributesFromCustomArcadeExpr( singleExprCache, graphic, layer, map)\r\n  };\r\n\r\n  exports.arcade.appendArcadeExpressionsToFields = function(ofields, layerInfo) {\r\n    if(!ofields) return;\r\n\r\n    var arcadeExpressions = exports.arcade.getExpressionInfosFromLayerInfo(layerInfo);\r\n    if(arcadeExpressions.length > 0) {\r\n      var prefix = 'expression/';\r\n      var re = new RegExp('^'+prefix);\r\n      array.forEach(arcadeExpressions, function(exp) {\r\n        // compare expressions with original fields list\r\n        if(!array.some(ofields, function(ofield) {\r\n          if(re.test(ofield.name)) { // field is an arcade expression\r\n            var ofieldExprName = ofield.name.substr(prefix.length);\r\n            return exp.name === ofieldExprName;\r\n          }\r\n        })) {\r\n          // if the expression does not exist in fields,\r\n          // add it to fields list:\r\n          ofields.push({\r\n            name: prefix + exp.name,\r\n            alias: exp.title,\r\n            show: true\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return ofields;\r\n  };\r\n\r\n  exports.arcade.isArcadeExpressionField = function(field) {\r\n    return field && typeof field.name === 'string' && field.name.indexOf('expression/') === 0;\r\n  };\r\n\r\n  exports.arcade.parseArcadeExpressions = function(expressionInfos) {\r\n    return ArcadeUtils.InfoTemplate._parseArcadeExpressions(expressionInfos);\r\n  };\r\n\r\n  // get the sort by fields\r\n  exports.getSortbyFields = function(grid, layer) {\r\n    var sortFields = grid && grid.get('sort') || [],\r\n        layerOID = layer && layer.objectIdField;\r\n    if(sortFields.length > 0) {\r\n      sortFields = array.map(sortFields, function(field) {\r\n        return field.attribute + ' ' + (field.descending ? 'DESC' : 'ASC');\r\n      });\r\n    } else {\r\n      if(layerOID) {\r\n        sortFields.push(layerOID  + ' ASC');\r\n      }\r\n    }\r\n    return sortFields;\r\n  };\r\n\r\n  function clipValidFields(sFields, rFields) {\r\n    if (!(sFields && sFields.length)) {\r\n      return rFields || [];\r\n    }\r\n    if (!(rFields && rFields.length)) {\r\n      return sFields;\r\n    }\r\n    var validFields = [];\r\n    for (var i = 0, len = sFields.length; i < len; i++) {\r\n      var sf = sFields[i];\r\n      for (var j = 0, len2 = rFields.length; j < len2; j++) {\r\n        var rf = rFields[j];\r\n        if (rf.name === sf.name) {\r\n          // update alias if needed\r\n          if(rf.alias !== sf.alias) {\r\n            sf.alias = rf.alias;\r\n          }\r\n          validFields.push(sf);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return validFields;\r\n  }\r\n\r\n});"]}