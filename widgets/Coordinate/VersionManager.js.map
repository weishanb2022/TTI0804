{"version":3,"sources":["../../../widgets/Coordinate/VersionManager.js"],"names":["define","BaseVersionManager","VersionManager","versions","version","upgrader","oldConfig","newConfig","displayOrderLonLat","prototype","constructor"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,OAAO,CAAC,gCAAD,CAAP,EACA,UAASC,kBAAT,EAA6B;AAC3B,WAASC,cAAT,GAAyB;AACvB,SAAKC,QAAL,GAAgB,CAAC;AACfC,eAAS,KADM;AAEfC,gBAAU,kBAASC,SAAT,EAAmB;AAC3B,eAAOA,SAAP;AACD;AAJc,KAAD,EAKb;AACDF,eAAS,KADR;AAEDC,gBAAU,kBAASC,SAAT,EAAmB;AAC3B,eAAOA,SAAP;AACD;AAJA,KALa,EAUb;AACDF,eAAS,KADR;AAEDC,gBAAU,kBAASC,SAAT,EAAmB;AAC3B,eAAOA,SAAP;AACD;AAJA,KAVa,EAeb;AACDF,eAAS,KADR;AAEDC,gBAAU,kBAASC,SAAT,EAAmB;AAC3B,eAAOA,SAAP;AACD;AAJA,KAfa,EAoBb;AACDF,eAAS,KADR;AAEDC,gBAAU,kBAASC,SAAT,EAAmB;AAC3B,eAAOA,SAAP;AACD;AAJA,KApBa,EAyBb;AACDF,eAAS,SADR;AAEDC,gBAAU,kBAASC,SAAT,EAAoB;AAC5B,eAAOA,SAAP;AACD;AAJA,KAzBa,EA8Bb;AACDF,eAAS,KADR;AAEDC,gBAAU,kBAASC,SAAT,EAAoB;AAC5B,eAAOA,SAAP;AACD;AAJA,KA9Ba,EAmCb;AACDF,eAAS,OADR;AAEDC,gBAAU,kBAASC,SAAT,EAAoB;AAC5B,eAAOA,SAAP;AACD;AAJA,KAnCa,EAwCb;AACDF,eAAS,KADR;AAEDC,gBAAU,kBAASC,SAAT,EAAoB;AAC5B,eAAOA,SAAP;AACD;AAJA,KAxCa,EA6Cb;AACDF,eAAS,KADR;AAEDC,gBAAU,kBAASC,SAAT,EAAmB;AAC3B,eAAOA,SAAP;AACD;AAJA,KA7Ca,EAkDb;AACDF,eAAS,KADR;AAEDC,gBAAU,kBAASC,SAAT,EAAmB;AAC3B,YAAIC,YAAYD,SAAhB;AACA,YAAIC,SAAJ,EAAe;AACb,cAAI,gBAAgB,OAAOA,UAAUC,kBAArC,EAAyD;AACvDD,sBAAUC,kBAAV,GAA+B,KAA/B;AACD;AACF;AACD,eAAOD,SAAP;AACD;AAVA,KAlDa,CAAhB;AA8DD;;AAEDL,iBAAeO,SAAf,GAA2B,IAAIR,kBAAJ,EAA3B;AACAC,iBAAeO,SAAf,CAAyBC,WAAzB,GAAuCR,cAAvC;AACA,SAAOA,cAAP;AACD,CAtED","file":"VersionManager.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////\r\n// Copyright Â© Esri. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//    http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n///////////////////////////////////////////////////////////////////////////\r\ndefine(['jimu/shared/BaseVersionManager'],\r\nfunction(BaseVersionManager) {\r\n  function VersionManager(){\r\n    this.versions = [{\r\n      version: '1.0',\r\n      upgrader: function(oldConfig){\r\n        return oldConfig;\r\n      }\r\n    }, {\r\n      version: '1.1',\r\n      upgrader: function(oldConfig){\r\n        return oldConfig;\r\n      }\r\n    }, {\r\n      version: '1.2',\r\n      upgrader: function(oldConfig){\r\n        return oldConfig;\r\n      }\r\n    }, {\r\n      version: '1.3',\r\n      upgrader: function(oldConfig){\r\n        return oldConfig;\r\n      }\r\n    }, {\r\n      version: '1.4',\r\n      upgrader: function(oldConfig){\r\n        return oldConfig;\r\n      }\r\n    }, {\r\n      version: '2.0Beta',\r\n      upgrader: function(oldConfig) {\r\n        return oldConfig;\r\n      }\r\n    }, {\r\n      version: '2.0',\r\n      upgrader: function(oldConfig) {\r\n        return oldConfig;\r\n      }\r\n    }, {\r\n      version: '2.0.1',\r\n      upgrader: function(oldConfig) {\r\n        return oldConfig;\r\n      }\r\n    }, {\r\n      version: '2.1',\r\n      upgrader: function(oldConfig) {\r\n        return oldConfig;\r\n      }\r\n    }, {\r\n      version: '2.2',\r\n      upgrader: function(oldConfig){\r\n        return oldConfig;\r\n      }\r\n    }, {\r\n      version: '2.3',\r\n      upgrader: function(oldConfig){\r\n        var newConfig = oldConfig;\r\n        if (newConfig) {\r\n          if (\"undefined\" === typeof newConfig.displayOrderLonLat) {\r\n            newConfig.displayOrderLonLat = false;\r\n          }\r\n        }\r\n        return newConfig;\r\n      }\r\n    }];\r\n  }\r\n\r\n  VersionManager.prototype = new BaseVersionManager();\r\n  VersionManager.prototype.constructor = VersionManager;\r\n  return VersionManager;\r\n});"]}