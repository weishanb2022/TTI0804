{"version":3,"sources":["../../../../widgets/Analysis/setting/Setting.js"],"names":["define","declare","array","lang","Event","query","on","coreFx","dom","domClass","domStyle","domConstruct","domProp","jsapiBundle","_WidgetsInTemplateMixin","BaseWidgetSetting","utils","portalUrlUtils","portalUtils","CheckBox","toolSettings","SingleToolSetting","baseClass","postMixInProperties","inherited","arguments","mixin","nls","analysisTools","window","jimuNls","common","postCreate","checkboxList","_initToolsData","portalUrl","getStandardPortalUrl","appConfig","portal","getPortal","isOnline","livingAtlasConfigEnabled","livingAtlasGroupQuery","length","isRTL","infoString","rowsData","infoRegex","checkAllBtn","placeAt","checkAllBtnDiv","own","domNode","hitch","_checkAll","getValue","forEach","row","_addRow","set","infoText","stripHTML","replace","config","setConfig","document","body","event","target","srcElement","isInternal","tbody","tr","isDescendant","show","wipeOut","node","toolSetting","play","rowData","toolName","name","title","chooseBestFacilities","usage","create","chkTd","chkBox","checked","rid","id","push","b","add","remove","_updateInfoString","stopPropagation","innerHTML","settingIconTd","settingImg","src","folderUrl","imgTd","imgDisplay","settingTr","settingTd","colspan","toolLabel","evt","stop","_toggleToolSetting","targetTr","_toggleSelected","wipeIn","trDom","item","setValue","_toggleCheckAll","value","toggle","getCheckboxById","contains","selectedItems","_setSelected","toolConfig","selected","findToolSetting","some","dijitID","getConfig","getRowById","get","toolItem","console","warn","isPortal","getAllSettings","sort","a","localeCompare","result"],"mappings":"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","file":"Setting.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////\r\n// Copyright © Esri. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//    http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n///////////////////////////////////////////////////////////////////////////\r\n/**\r\n * Analysis widget setting content.\r\n * @module widgets/Analysis/setting/Setting\r\n */\r\ndefine([\r\n    'dojo/_base/declare',\r\n    'dojo/_base/array',\r\n    'dojo/_base/lang',\r\n    'dojo/_base/event',\r\n    'dojo/query',\r\n    'dojo/on',\r\n    'dojo/fx',\r\n    'dojo/dom',\r\n    'dojo/dom-class',\r\n    'dojo/dom-style',\r\n    'dojo/dom-construct',\r\n    'dojo/dom-prop',\r\n    'dojo/i18n!esri/nls/jsapi',\r\n    'dijit/_WidgetsInTemplateMixin',\r\n    'jimu/BaseWidgetSetting',\r\n    'jimu/utils',\r\n    'jimu/portalUrlUtils',\r\n    'jimu/portalUtils',\r\n    'jimu/dijit/CheckBox',\r\n    '../toolSettings',\r\n    './SingleToolSetting'\r\n  ],\r\n  function(\r\n    declare, array, lang, Event, query, on, coreFx, dom, domClass, domStyle, domConstruct, domProp,\r\n    jsapiBundle, _WidgetsInTemplateMixin, BaseWidgetSetting, utils, portalUrlUtils, portalUtils, CheckBox, toolSettings,\r\n    SingleToolSetting) {\r\n    return /** @alias module:widgets/Analysis/setting/Setting */ declare([\r\n        BaseWidgetSetting, _WidgetsInTemplateMixin], {\r\n      //these two properties is defined in the BaseWidget\r\n      baseClass: 'jimu-widget-analysis-setting',\r\n\r\n      postMixInProperties: function(){\r\n        this.inherited(arguments);\r\n        lang.mixin(this.nls, jsapiBundle.analysisTools);\r\n        lang.mixin(this.nls, window.jimuNls.common);\r\n      },\r\n\r\n      postCreate: function() {\r\n        this.inherited(arguments);\r\n\r\n        this.checkboxList = [];\r\n        this._initToolsData();\r\n\r\n        var portalUrl = portalUrlUtils.getStandardPortalUrl(this.appConfig.portalUrl);\r\n        var portal = portalUtils.getPortal(portalUrl);\r\n        var isOnline = portalUrlUtils.isOnline(portalUrl);\r\n        var livingAtlasConfigEnabled = isOnline ? true : (portal.livingAtlasGroupQuery && portal.livingAtlasGroupQuery.length > 0);\r\n\r\n        if(window.isRTL){\r\n          this.infoString = this.rowsData.length + '/0';\r\n          this.infoRegex = /\\d+$/;\r\n        }else{\r\n          this.infoString = '0/' + this.rowsData.length;\r\n          this.infoRegex = /^\\d+/;\r\n        }\r\n\r\n        this.checkAllBtn = new CheckBox({});\r\n        this.checkAllBtn.placeAt(this.checkAllBtnDiv);\r\n        this.own(on(this.checkAllBtn.domNode, 'click', lang.hitch(this, function() {\r\n          this._checkAll(this.checkAllBtn.getValue());\r\n        })));\r\n\r\n        array.forEach(this.rowsData, lang.hitch(this, function(row){\r\n          this._addRow(row, livingAtlasConfigEnabled);\r\n        }));\r\n        domProp.set(this.infoText, 'innerHTML', utils.stripHTML(this.infoString.replace(this.infoRegex, 0)));\r\n\r\n        if(this.config){\r\n          this.setConfig(this.config);\r\n        }\r\n\r\n        this.own(on(document.body, 'click', lang.hitch(this, function(event) {\r\n          var target = event.target || event.srcElement, isInternal;\r\n          query('tr.setting', this.tbody).forEach(function(tr){\r\n            isInternal = (target === tr) || dom.isDescendant(target, tr);\r\n            if(!isInternal) {\r\n              //hide the tool setting\r\n              if(tr.show){\r\n                coreFx.wipeOut({\r\n                  node: tr.toolSetting.domNode\r\n                }).play();\r\n                tr.show = false;\r\n              }\r\n            }\r\n          }, this);\r\n        })));\r\n      },\r\n\r\n      /**\r\n       * Add a row to analysis dijit tool table.\r\n       * @param {Object} rowData Config of analysis dijit tool\r\n       */\r\n      _addRow: function(rowData, livingAtlasConfigEnabled){\r\n        var toolName = rowData.name;\r\n        //TODO: temporary fix\r\n        if(rowData.title === 'chooseBestFacilities') {\r\n          this.nls[rowData.title] = this.nls.chooseBestFacilities;\r\n          this.nls[rowData.usage] = this.nls.chooseBestFacilities;\r\n        }\r\n\r\n        var tr = domConstruct.create(\"tr\", {\r\n          'class': 'tools-table-tr',\r\n          title: this.nls[rowData.title]\r\n        }, this.tbody);\r\n\r\n        tr.rowData = rowData;\r\n        //create checkbox\r\n        var chkTd = domConstruct.create(\"td\", {'class': 'checkbox-td'}, tr);\r\n        var chkBox = new CheckBox({\r\n          checked: false,\r\n          // label: this.nls[rowData.title],\r\n          rid: rowData.id\r\n        });\r\n        chkBox.placeAt(chkTd);\r\n        this.checkboxList.push(chkBox);\r\n\r\n        this.own(on(chkBox, 'change', lang.hitch(this, function(b){\r\n          if(b){\r\n            domClass.add(tr, 'selected');\r\n          } else {\r\n            domClass.remove(tr, 'selected');\r\n          }\r\n          this._updateInfoString();\r\n        })));\r\n        this.own(on(chkBox.domNode, 'click', lang.hitch(this, function(event){\r\n          event.stopPropagation();\r\n        })));\r\n\r\n        //create name\r\n        domConstruct.create(\"td\", {\r\n          innerHTML: utils.stripHTML(this.nls[rowData.title]),\r\n          'class':'name-td'\r\n        }, tr);\r\n        //setting icon\r\n        var settingIconTd = domConstruct.create(\"td\", {'class': 'setting-td'}, tr);\r\n        var settingImg = domConstruct.create('img', {\r\n          src: this.folderUrl + 'images/setting.png',\r\n          title: this.nls.toolSetting,\r\n          'class': 'setting-icon'\r\n        }, settingIconTd);\r\n        //create img\r\n        var imgTd = domConstruct.create(\"td\", {'class': 'img-td'}, tr);\r\n        domConstruct.create('img', {src: this.folderUrl + rowData.imgDisplay}, imgTd);\r\n        //create usage\r\n        domConstruct.create(\"td\", {\r\n          innerHTML: utils.stripHTML(this.nls[rowData.usage]),\r\n          'class':'usage-td'},\r\n        tr);\r\n\r\n        //create tool setting\r\n        var settingTr = domConstruct.create(\"tr\", {\r\n          'class': 'setting',\r\n          'data-toolname': toolName\r\n        }, this.tbody);\r\n        var settingTd = domConstruct.create(\"td\", {\r\n          colspan: 5\r\n        }, settingTr);\r\n        var toolSetting = new SingleToolSetting({\r\n          toolLabel: this.nls[rowData.title],\r\n          rowData: rowData,\r\n          nls: this.nls,\r\n          appConfig: this.appConfig,\r\n          livingAtlasConfigEnabled: livingAtlasConfigEnabled\r\n        });\r\n        domStyle.set(toolSetting.domNode, 'display', 'none');\r\n        toolSetting.placeAt(settingTd);\r\n        settingTr.toolSetting = toolSetting;\r\n        settingTr.show = false;\r\n\r\n        this.own(on(settingImg, 'click', lang.hitch(this, function(evt){\r\n          Event.stop(evt);\r\n\r\n          this._toggleToolSetting(settingTr);\r\n\r\n          query('tr.setting', this.tbody).forEach(function(targetTr){\r\n            if(targetTr.show && targetTr !== settingTr){\r\n              coreFx.wipeOut({\r\n                node: targetTr.toolSetting.domNode\r\n              }).play();\r\n              targetTr.show = false;\r\n            }\r\n          }, this);\r\n        })));\r\n\r\n        this.own(on(tr, 'click', lang.hitch(this, function(evt){\r\n          Event.stop(evt);\r\n\r\n          this._toggleSelected(tr);\r\n\r\n          query('tr.setting', this.tbody).forEach(function(targetTr){\r\n            if(targetTr.show && targetTr.toolSetting.rowData.id !== tr.rowData.id){\r\n              coreFx.wipeOut({\r\n                node: targetTr.toolSetting.domNode\r\n              }).play();\r\n              targetTr.show = false;\r\n            }\r\n          }, this);\r\n        })));\r\n      },\r\n\r\n      _toggleToolSetting: function(tr){\r\n        if(tr.show){\r\n          coreFx.wipeOut({\r\n            node: tr.toolSetting.domNode\r\n          }).play();\r\n          tr.show = false;\r\n        }else{\r\n          coreFx.wipeIn({\r\n            node: tr.toolSetting.domNode\r\n          }).play();\r\n          tr.show = true;\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Make all analysis tools selected.\r\n       */\r\n      _checkAll: function(checked){\r\n        if(checked){\r\n          //select all\r\n          query('tr.tools-table-tr', this.tbody).forEach(function(trDom){\r\n            //Will not re-apply duplicate classes.\r\n            domClass.add(trDom, 'selected');\r\n          });\r\n          array.forEach(this.checkboxList, function(item){\r\n            item.setValue(true);\r\n          });\r\n          this._updateInfoString();\r\n        }else{\r\n          //unselect all\r\n          query('tr.tools-table-tr', this.tbody).forEach(lang.hitch(this, function(trDom){\r\n            domClass.remove(trDom, 'selected');\r\n          }));\r\n          array.forEach(this.checkboxList, function(item){\r\n            item.setValue(false);\r\n          });\r\n\r\n          domProp.set(this.infoText, 'innerHTML', utils.stripHTML(this.infoString.replace(this.infoRegex, 0)));\r\n        }\r\n      },\r\n\r\n      _toggleCheckAll: function() {\r\n        var value = !this.checkAllBtn.getValue();\r\n        this.checkAllBtn.setValue(value);\r\n        this._checkAll(value);\r\n      },\r\n\r\n      /**\r\n       * Toggle selection of a table row.\r\n       * @param  {Object} trDom The dom of a table row.\r\n       */\r\n      _toggleSelected: function(trDom){\r\n        domClass.toggle(trDom, 'selected');\r\n        var chkBox = this.getCheckboxById(trDom.rowData.id);\r\n        if(chkBox){\r\n          chkBox.setValue(domClass.contains(trDom, 'selected'));\r\n        }\r\n        this._updateInfoString();\r\n      },\r\n\r\n      /**\r\n       * Update the info string of analysis dijit tools. [selected]/[all]\r\n       */\r\n      _updateInfoString: function(){\r\n        var selectedItems = query('tr.selected', this.tbody).length;\r\n        domProp.set(this.infoText, 'innerHTML',\r\n          utils.stripHTML(this.infoString.replace(this.infoRegex, selectedItems)));\r\n        if(selectedItems === this.rowsData.length){\r\n          this.checkAllBtn.setValue(true);\r\n        }else{\r\n          this.checkAllBtn.setValue(false);\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Set tool state based the param passed in.\r\n       * @param {object} toolConfig Configuration of the analysis dijit tool.\r\n       * @param {bool} selected\r\n       */\r\n      _setSelected: function(toolConfig, selected){\r\n        var rowData = toolSettings.findToolSetting(toolConfig.name);\r\n        if(rowData !== null){\r\n          query('tr.tools-table-tr', this.tbody).some(lang.hitch(this, function(trDom){\r\n            if(trDom.rowData.dijitID === rowData.dijitID){\r\n              var chkBox = this.getCheckboxById(rowData.id);\r\n              if(chkBox){\r\n                chkBox.setValue(selected);\r\n              }\r\n              if(selected === true){\r\n                domClass.add(trDom, 'selected');\r\n              }else{\r\n                domClass.remove(trDom, 'selected');\r\n              }\r\n\r\n              //set tool setting\r\n              var settingTr = query('tr.setting[data-toolname=' + toolConfig.name + ']', this.tbody)[0];\r\n              if(settingTr){\r\n                var toolSetting = settingTr.toolSetting;\r\n                if(toolSetting){\r\n                  toolSetting.setConfig(toolConfig);\r\n                }\r\n              }\r\n\r\n              return true;\r\n            }\r\n          }));\r\n        }\r\n      },\r\n\r\n      /**\r\n       * Set the configuration of analysis widget.\r\n       * @param {Object} config\r\n       */\r\n      setConfig: function(config) {\r\n        this.config = config;\r\n\r\n        array.forEach(this.config.analysisTools, lang.hitch(this, function(item){\r\n          this._setSelected(item, true);\r\n        }));\r\n\r\n        this._updateInfoString();\r\n      },\r\n\r\n      /**\r\n       * Get the configuration of analysis widget.\r\n       * @return {Object} The selected tool names.\r\n       */\r\n      getConfig: function() {\r\n        var config = {\r\n          analysisTools:[]\r\n        };\r\n\r\n        array.forEach(this.checkboxList, lang.hitch(this, function(item){\r\n          if(item.getValue() === true){\r\n            var rowData = this.getRowById(item.get('rid'));\r\n            var toolName = rowData.name;\r\n            if(toolName !== null){\r\n              var toolItem = {\r\n                name: toolName\r\n              };\r\n              var settingTr = query('tr.setting[data-toolname=' + toolName + ']', this.tbody)[0];\r\n              var toolSetting = settingTr.toolSetting;\r\n\r\n              if(toolSetting){\r\n                lang.mixin(toolItem, toolSetting.getConfig());\r\n              }\r\n\r\n              config.analysisTools.push(toolItem);\r\n            }else{\r\n              console.warn('error find rowsData: ' + item.get('title'));\r\n            }\r\n          }\r\n        }));\r\n\r\n        return config;\r\n      },\r\n\r\n      /**\r\n       * Init the analysis tool table.\r\n       */\r\n      _initToolsData: function(){\r\n        var portalUrl = portalUrlUtils.getStandardPortalUrl(this.appConfig.portalUrl);\r\n        var isPortal = !portalUrlUtils.isOnline(portalUrl);\r\n        this.rowsData = toolSettings.getAllSettings(isPortal).sort(lang.hitch(this, function(a, b) {\r\n          return ('' + this.nls[a.title]).localeCompare('' + this.nls[b.title]);\r\n        }));\r\n      },\r\n\r\n      getRowById: function(rid) {\r\n        var result;\r\n        array.some(this.rowsData, lang.hitch(this, function(row) {\r\n          if (row.id === rid) {\r\n            result = row;\r\n            return true;\r\n          }\r\n        }));\r\n        return result;\r\n      },\r\n\r\n      getCheckboxById: function(rid) {\r\n        var result;\r\n        array.some(this.checkboxList, lang.hitch(this, function(item) {\r\n          if (item.rid === rid) {\r\n            result = item;\r\n            return true;\r\n          }\r\n        }));\r\n        return result;\r\n      }\r\n    });\r\n  });\r\n"]}