{"version":3,"sources":["../../../../../themes/DashboardTheme/panels/MobilePanel/Panel.js"],"names":["define","declare","lang","array","_WidgetBase","domConstruct","domGeometry","domStyle","domClass","on","Deferred","query","debounce","Evented","Move","baseFx","coreFx","_TemplatedMixin","template","ANIMATION_DURATION","PORTRAIT_MODE","LANDSCAPE_MODE","THRESHOLD","WIDGET_NORMAL","WIDGET_MINIMIZED","WIDGET_MAXIMIZED","MAP_RATIO_PORTRAIT","WIDGET_MIN_WIDTH","SPLITTER_HEIGHT","baseClass","templateString","mobileLayout","layoutId","mapId","widgetIds","panels","currentIndex","leftPos","count","title","widgetMode","layoutManager","_moveStartX","_moveStartY","postCreate","inherited","arguments","setMobileLayout","place","mapNode","own","previousArrow","hitch","_switchPrevious","nextArrow","_switchNext","_initSplitter","set","footerNode","resize","clearPanels","empty","containerNode","_updateHeader","setPanels","length","_openPanel","_resizeActivePanel","widgetId","activePanel","otherPanel","domNode","_loadDashboardWidget","then","panel","div","create","placeAt","panelManager","openPanel","labelNode","innerHTML","config","label","numOfPanels","forEach","wid","closePanel","moveable","destroy","parentConstrainedMoveable","splitterNode","area","within","onMoveStart","onMoving","onMoveStop","mode","remove","add","deferred","_restoreLandscapeLayout","_restorePortraitLayout","containerSize","getMarginBox","widgetContainerNode","window","isRTL","emit","right","l","top","t","width","w","height","h","left","previousIndex","currentWidgetId","previousWidgetId","currentPanel","previousPanel","currentWidget","previousWidget","countNode","getWidgetById","onDeActive","onActive","_play","size","props","animateProperty","node","duration","properties","onEnd","opacity","play","mover","parseFloat","get","dx","dy","_resizeWidgetVertically","_resizeWidgetHorizontally","threshold","changed","animArray","animation","splitterTop","mapTop","mapHeight","widgetHeight","push","combine","splitterLeft","mapLeft","splitterRight","mapRight","mapWidth","widgetWidth","containerProps","resolve"],"mappings":"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","file":"Panel.js","sourcesContent":["///////////////////////////////////////////////////////////////////////////\r\n// Copyright © Esri. All Rights Reserved.\r\n//\r\n// Licensed under the Apache License Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//    http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n///////////////////////////////////////////////////////////////////////////\r\n\r\ndefine(['dojo/_base/declare',\r\n  'dojo/_base/lang',\r\n  'dojo/_base/array',\r\n  'dijit/_WidgetBase',\r\n  'dojo/dom-construct',\r\n  'dojo/dom-geometry',\r\n  'dojo/dom-style',\r\n  'dojo/dom-class',\r\n  'dojo/on',\r\n  'dojo/Deferred',\r\n  'dojo/query',\r\n  'dojo/debounce',\r\n  'dojo/Evented',\r\n  'dojo/dnd/move',\r\n  'dojo/_base/fx',\r\n  'dojo/fx',\r\n  'dijit/_TemplatedMixin',\r\n  'dojo/text!./Panel.html'\r\n],\r\nfunction(declare, lang, array, _WidgetBase, domConstruct, domGeometry, domStyle, domClass,\r\n  on, Deferred, query, debounce, Evented, Move, baseFx, coreFx, _TemplatedMixin, template) {\r\n  var ANIMATION_DURATION = 300;\r\n  var PORTRAIT_MODE = 1, LANDSCAPE_MODE = 2;\r\n  var THRESHOLD = 150; // If swipe more than 150px, trigger the action.\r\n  var WIDGET_NORMAL = 0, WIDGET_MINIMIZED = 1, WIDGET_MAXIMIZED = 2;\r\n  var MAP_RATIO_PORTRAIT = 0.5, WIDGET_MIN_WIDTH = 320, SPLITTER_HEIGHT = 16;\r\n\r\n  return declare([_WidgetBase, _TemplatedMixin, Evented], {\r\n    baseClass: 'jimu-dnd-mobile-panel',\r\n    templateString: template,\r\n    mobileLayout: PORTRAIT_MODE,\r\n    layoutId: '',\r\n    mapId: '',\r\n    widgetIds: null,\r\n    panels: null,\r\n    currentIndex: 0,\r\n    leftPos: 0,\r\n    count: '',\r\n    title: '',\r\n    widgetMode: WIDGET_NORMAL,\r\n    layoutManager: null, // instance of GridLayoutManager\r\n\r\n    _moveStartX: 0,\r\n    _moveStartY: 0,\r\n\r\n    postCreate: function(){\r\n      this.inherited(arguments);\r\n\r\n      this.setMobileLayout(this.mobileLayout);\r\n      domConstruct.place(this.mapId, this.mapNode);\r\n\r\n      this.own(on(this.previousArrow, 'click', lang.hitch(this, this._switchPrevious)));\r\n      this.own(on(this.nextArrow, 'click', lang.hitch(this, this._switchNext)));\r\n\r\n      this._initSplitter();\r\n      domStyle.set(this.footerNode, 'opacity', '0');\r\n      this.resize();\r\n    },\r\n\r\n    clearPanels: function() {\r\n      this.widgetIds = [];\r\n      this.panels = [];\r\n      domConstruct.empty(this.containerNode);\r\n      domStyle.set(this.containerNode, 'left', 0);\r\n      this.currentIndex = 0;\r\n      this._updateHeader(this.currentIndex - 1, this.currentIndex);\r\n    },\r\n\r\n    setPanels: function(widgetIds, panels) {\r\n      this.widgetIds = widgetIds;\r\n      this.panels = panels || {};\r\n      this.currentIndex = 0;\r\n      if (this.widgetIds.length <= 1) {\r\n        domStyle.set(this.previousArrow, 'display', 'none');\r\n        domStyle.set(this.nextArrow, 'display', 'none');\r\n      } else {\r\n        domStyle.set(this.previousArrow, 'display', 'block');\r\n        domStyle.set(this.nextArrow, 'display', 'block');\r\n      }\r\n      domStyle.set(this.footerNode, 'opacity', '0');\r\n      this._openPanel();\r\n      this._updateHeader(this.currentIndex - 1, this.currentIndex);\r\n    },\r\n\r\n    _resizeActivePanel: function() {\r\n      if (this.widgetIds && this.panels) {\r\n        var widgetId = this.widgetIds[this.currentIndex];\r\n        var activePanel = this.panels[widgetId];\r\n        if (activePanel && typeof activePanel.resize === 'function') {\r\n          activePanel.resize();\r\n        }\r\n      }\r\n    },\r\n\r\n    _openPanel: function() {\r\n      var widgetId = this.widgetIds[this.currentIndex];\r\n      var activePanel = this.panels[widgetId], otherPanel;\r\n      if (!activePanel || !activePanel.domNode) {\r\n        this.layoutManager._loadDashboardWidget(this.widgetIds[this.currentIndex])\r\n          .then(lang.hitch(this, function(panel) {\r\n            if(panel) {\r\n              var div = domConstruct.create('div', {\r\n                'data-widgetId': widgetId,\r\n                'class': 'dnd-mobile-container'\r\n              }, this.containerNode);\r\n              panel.placeAt(div);\r\n              this.panels[widgetId] = panel;\r\n              this.layoutManager.panelManager.openPanel(panel);\r\n\r\n              this.labelNode.innerHTML = panel.config.label;\r\n            }\r\n          }));\r\n      } else {\r\n        var numOfPanels = query('div[data-widgetId=\"' + widgetId + '\"]', this.containerNode);\r\n        if (numOfPanels.length === 0) {\r\n          var div = domConstruct.create('div', {\r\n            'data-widgetId': widgetId,\r\n            'class': 'dnd-mobile-container'\r\n          }, this.containerNode);\r\n          activePanel.placeAt(div);\r\n        }\r\n        this.layoutManager.panelManager.openPanel(activePanel);\r\n      }\r\n\r\n      // Close all other panels\r\n      array.forEach(this.widgetIds, lang.hitch(this, function(wid) {\r\n        if (wid !== widgetId) {\r\n          otherPanel = this.panels[wid];\r\n          if (otherPanel) {\r\n            this.layoutManager.panelManager.closePanel(otherPanel);\r\n          }\r\n        }\r\n      }));\r\n    },\r\n\r\n    _initSplitter: function() {\r\n      if(this.moveable){\r\n        this.moveable.destroy();\r\n      }\r\n      this.moveable = new Move.parentConstrainedMoveable(this.splitterNode, {\r\n        area: 'content',\r\n        within: true\r\n      });\r\n      this.own(on(this.moveable, 'MoveStart', lang.hitch(this, this.onMoveStart)));\r\n      this.own(on(this.moveable, 'Moving', debounce(lang.hitch(this, this.onMoving), 50)));\r\n      this.own(on(this.moveable, 'MoveStop', lang.hitch(this, this.onMoveStop)));\r\n    },\r\n\r\n    destroy: function() {\r\n      if(this.moveable){\r\n        this.moveable.destroy();\r\n        this.moveable = null;\r\n      }\r\n      var widgetId = this.widgetIds[this.currentIndex];\r\n      var activePanel = this.panels[widgetId];\r\n      if (activePanel) {\r\n        this.layoutManager.panelManager.closePanel(activePanel);\r\n      }\r\n      domConstruct.empty(this.containerNode);\r\n      this.inherited(arguments);\r\n    },\r\n\r\n    setMobileLayout: function(mode) {\r\n      if (mode === LANDSCAPE_MODE) {\r\n        this.mobileLayout = LANDSCAPE_MODE;\r\n        domClass.remove(this.domNode, 'portrait');\r\n        domClass.add(this.domNode, 'landscape');\r\n      } else {\r\n        this.mobileLayout = PORTRAIT_MODE;\r\n        domClass.remove(this.domNode, 'landscape');\r\n        domClass.add(this.domNode, 'portrait');\r\n      }\r\n    },\r\n\r\n    resize: function() {\r\n      var deferred;\r\n      if (this.mobileLayout === LANDSCAPE_MODE) {\r\n        deferred = this._restoreLandscapeLayout();\r\n      } else {\r\n        deferred = this._restorePortraitLayout();\r\n      }\r\n      // trigger the resized event after the animation finished\r\n      deferred.then(lang.hitch(this, function() {\r\n        // may have been destroyed after animation finished because of layout changes from\r\n        // mobile to desktop.\r\n        if (this.domNode) {\r\n          var containerSize = domGeometry.getMarginBox(this.widgetContainerNode);\r\n          if (window.isRTL) {\r\n            this.emit('resized', {\r\n              right: containerSize.l,\r\n              top: containerSize.t,\r\n              width: containerSize.w,\r\n              height: containerSize.h\r\n            });\r\n          } else {\r\n            this.emit('resized', {\r\n              left: containerSize.l,\r\n              top: containerSize.t,\r\n              width: containerSize.w,\r\n              height: containerSize.h\r\n            });\r\n          }\r\n        }\r\n      }));\r\n    },\r\n\r\n    _updateHeader: function(previousIndex, currentIndex) {\r\n      if (this.widgetIds && this.widgetIds.length > 0) {\r\n        var currentWidgetId = this.widgetIds[currentIndex],\r\n          previousWidgetId = this.widgetIds[previousIndex];\r\n        var currentPanel = this.panels[currentWidgetId],\r\n          previousPanel = this.panels[previousWidgetId];\r\n        var currentWidget, previousWidget;\r\n\r\n        this.countNode.innerHTML = (currentIndex + 1) + '/' + this.widgetIds.length;\r\n        if(previousIndex && previousPanel) {\r\n          previousWidget = previousPanel.getWidgetById(previousWidgetId);\r\n          previousWidget.onDeActive();\r\n        }\r\n        if (currentPanel) {\r\n          currentWidget = currentPanel.getWidgetById(currentWidgetId);\r\n          if (currentWidget) { // may be undefined because widgets in panel is loaded async\r\n            currentWidget.onActive();\r\n            this.labelNode.innerHTML = currentWidget.label;\r\n          }\r\n        } else {\r\n          this.labelNode.innerHTML = '';\r\n        }\r\n      } else {\r\n        this.labelNode.innerHTML = '';\r\n        this.countNode.innerHTML = '';\r\n      }\r\n\r\n      if (currentIndex === 0) {\r\n        domClass.add(this.previousArrow, 'disabled');\r\n      } else {\r\n        domClass.remove(this.previousArrow, 'disabled');\r\n      }\r\n      if (currentIndex === this.widgetIds.length - 1) {\r\n        domClass.add(this.nextArrow, 'disabled');\r\n      } else {\r\n        domClass.remove(this.nextArrow, 'disabled');\r\n      }\r\n    },\r\n\r\n    _switchPrevious: function() {\r\n      if (this.currentIndex > 0) {\r\n        this._updateHeader(this.currentIndex, this.currentIndex - 1);\r\n        this.currentIndex--;\r\n        this._play();\r\n      }\r\n    },\r\n\r\n    _switchNext: function() {\r\n      if (this.currentIndex < this.widgetIds.length - 1) {\r\n        this._updateHeader(this.currentIndex, this.currentIndex + 1);\r\n        this.currentIndex++;\r\n        this._play();\r\n      }\r\n    },\r\n\r\n    _play: function() {\r\n      var size = domGeometry.getMarginBox(this.containerNode);\r\n      var props;\r\n      if (window.isRTL) {\r\n        props = {\r\n          right: -this.currentIndex * size.w\r\n        };\r\n      } else {\r\n        props = {\r\n          left: -this.currentIndex * size.w\r\n        };\r\n      }\r\n\r\n      baseFx.animateProperty({\r\n        node: this.containerNode,\r\n        duration: ANIMATION_DURATION,\r\n        properties: props,\r\n        onEnd: lang.hitch(this, function() {\r\n          domStyle.set(this.footerNode, 'opacity', '1');\r\n          baseFx.animateProperty({\r\n            node: this.footerNode,\r\n            duration: ANIMATION_DURATION * 7,\r\n            properties: {\r\n              opacity: 0\r\n            }\r\n          }).play();\r\n        })\r\n      }).play();\r\n      this._openPanel();\r\n    },\r\n\r\n    onMoveStart: function(mover){\r\n      if (window.isRTL) {\r\n        var size = domGeometry.getMarginBox(this.layoutId);\r\n        var right = parseFloat(domStyle.get(mover.node, 'right'));\r\n        this._moveStartX = size.w - right;\r\n        domStyle.set(this.splitterNode, {\r\n          left: this._moveStartX + 'px',\r\n          right: 'auto'\r\n        });\r\n      } else {\r\n        this._moveStartX = domStyle.get(mover.node, 'left');\r\n      }\r\n      this._moveStartY = domStyle.get(mover.node, 'top');\r\n    },\r\n\r\n    onMoving: function(mover){\r\n      if (!mover || !mover.node) {\r\n        return;\r\n      }\r\n      var dx = domStyle.get(mover.node, 'left') - this._moveStartX,\r\n      dy = domStyle.get(mover.node, 'top') - this._moveStartY;\r\n\r\n      if (this.mobileLayout === PORTRAIT_MODE) { // Move horizontally\r\n        domStyle.set(this.widgetContainerNode, 'top', (this._moveStartY + dy +\r\n          SPLITTER_HEIGHT) + 'px');\r\n        domStyle.set(this.splitterNode, 'top', (this._moveStartY + dy) + 'px');\r\n        domStyle.set(this.splitterNode, 'left', '0');\r\n      } else if (this.mobileLayout === LANDSCAPE_MODE) {\r\n        // Move horizontally\r\n        domStyle.set(this.widgetContainerNode, {\r\n          left: (this._moveStartX + dx + SPLITTER_HEIGHT) + 'px',\r\n          right: 'auto'\r\n        });\r\n        domStyle.set(this.splitterNode, {\r\n          left: (this._moveStartX + dx) + 'px',\r\n          right: 'auto',\r\n          top: 0\r\n        });\r\n      }\r\n    },\r\n\r\n    onMoveStop: function(mover){\r\n      var dx = domStyle.get(mover.node, 'left') - this._moveStartX,\r\n      dy = domStyle.get(mover.node, 'top') - this._moveStartY;\r\n      if (this.mobileLayout === PORTRAIT_MODE) {\r\n        this._resizeWidgetVertically(dy);\r\n      } else if (this.mobileLayout === LANDSCAPE_MODE) {\r\n        this._resizeWidgetHorizontally(dx);\r\n      }\r\n    },\r\n\r\n    _resizeWidgetVertically: function(dy) {\r\n      var size = domGeometry.getMarginBox(this.layoutId);\r\n      var containerSize = domGeometry.getMarginBox(this.containerNode);\r\n      var threshold = containerSize.h / 3, changed = false, animArray = [], animation;\r\n      threshold = threshold > THRESHOLD ? THRESHOLD : threshold;\r\n\r\n      var splitterTop, mapTop, mapHeight, widgetHeight;\r\n      if (this.widgetMode === WIDGET_NORMAL && dy < -threshold) { // normal to maximize\r\n        this.widgetMode = WIDGET_MAXIMIZED;\r\n        splitterTop = 0;\r\n        mapTop = -size.h * MAP_RATIO_PORTRAIT;\r\n        mapHeight = size.h * MAP_RATIO_PORTRAIT;\r\n        widgetHeight = size.h - SPLITTER_HEIGHT;\r\n        changed = true;\r\n        this.emit('resized', {\r\n          left: 0,\r\n          top: splitterTop + SPLITTER_HEIGHT,\r\n          width: size.w,\r\n          height: widgetHeight\r\n        });\r\n      } else if(this.widgetMode === WIDGET_NORMAL && dy > threshold) { // normal to minimize\r\n        this.widgetMode = WIDGET_MINIMIZED;\r\n        splitterTop = size.h - SPLITTER_HEIGHT;\r\n        mapHeight = size.h - SPLITTER_HEIGHT;\r\n        mapTop = 0;\r\n        widgetHeight = size.h * (1 - MAP_RATIO_PORTRAIT) - SPLITTER_HEIGHT;\r\n        changed = true;\r\n        this.emit('resized', {\r\n          left: 0,\r\n          top: splitterTop + SPLITTER_HEIGHT,\r\n          width: size.w,\r\n          height: widgetHeight\r\n        });\r\n      } else if(this.widgetMode === WIDGET_MINIMIZED && dy < -threshold || // minimize to normal\r\n        this.widgetMode === WIDGET_MAXIMIZED && dy > threshold) { // maximize to normal\r\n        this.widgetMode = WIDGET_NORMAL;\r\n        splitterTop = size.h * MAP_RATIO_PORTRAIT;\r\n        mapHeight = size.h * MAP_RATIO_PORTRAIT;\r\n        mapTop = 0;\r\n        widgetHeight = size.h * (1 - MAP_RATIO_PORTRAIT) - SPLITTER_HEIGHT;\r\n        changed = true;\r\n        this.emit('resized', {\r\n          left: 0,\r\n          top: splitterTop + SPLITTER_HEIGHT,\r\n          width: size.w,\r\n          height: widgetHeight\r\n        });\r\n      }\r\n      if (changed) {\r\n        animArray.push(baseFx.animateProperty({\r\n          node: this.widgetContainerNode,\r\n          duration: ANIMATION_DURATION,\r\n          properties: {\r\n            top: splitterTop + SPLITTER_HEIGHT,\r\n            height: widgetHeight\r\n          }\r\n        }));\r\n\r\n        animArray.push(baseFx.animateProperty({\r\n          node: this.containerNode,\r\n          duration: ANIMATION_DURATION,\r\n          properties: {\r\n            left: -this.currentIndex * size.w,\r\n            width: size.w\r\n          }\r\n        }));\r\n\r\n        animArray.push(baseFx.animateProperty({\r\n          node: this.splitterNode,\r\n          duration: ANIMATION_DURATION,\r\n          properties: {\r\n            top: splitterTop\r\n          }\r\n        }));\r\n\r\n        animArray.push(baseFx.animateProperty({\r\n          node: this.mapNode,\r\n          duration: ANIMATION_DURATION,\r\n          properties: {\r\n            height: mapHeight,\r\n            top: mapTop\r\n          }\r\n        }));\r\n\r\n        animation = coreFx.combine(animArray);\r\n        animation.onEnd = lang.hitch(this, this._resizeActivePanel);\r\n        animation.play();\r\n      } else {\r\n        this._restorePortraitLayout();\r\n      }\r\n    },\r\n\r\n    _resizeWidgetHorizontally: function(dx) {\r\n      var size = domGeometry.getMarginBox(this.layoutId);\r\n      var containerSize = domGeometry.getMarginBox(this.containerNode);\r\n      var threshold = containerSize.w / 3, changed = false, animArray = [], animation;\r\n      threshold = threshold > THRESHOLD ? THRESHOLD : threshold;\r\n\r\n      var splitterLeft, mapLeft, splitterRight, mapRight, mapWidth, widgetWidth;\r\n      if (window.isRTL) {\r\n        if (this.widgetMode === WIDGET_NORMAL && dx > threshold) { // normal to maximize\r\n          this.widgetMode = WIDGET_MAXIMIZED;\r\n          splitterRight = 0;\r\n          mapWidth = size.w - WIDGET_MIN_WIDTH - SPLITTER_HEIGHT;\r\n          mapRight = -mapWidth;\r\n          widgetWidth = size.w - SPLITTER_HEIGHT;\r\n          changed = true;\r\n          this.emit('resized', {\r\n            left: splitterRight + SPLITTER_HEIGHT,\r\n            right: 'auto',\r\n            top: 0,\r\n            width: widgetWidth,\r\n            height: size.h\r\n          });\r\n        } else if(this.widgetMode === WIDGET_NORMAL && dx < -threshold) { // normal to minimize\r\n          this.widgetMode = WIDGET_MINIMIZED;\r\n          mapWidth = size.w - SPLITTER_HEIGHT;\r\n          splitterRight = mapWidth;\r\n          mapRight = 0;\r\n          widgetWidth = WIDGET_MIN_WIDTH;\r\n          changed = true;\r\n          this.emit('resized', {\r\n            left: splitterRight + SPLITTER_HEIGHT,\r\n            right: 'auto',\r\n            top: 0,\r\n            width: widgetWidth,\r\n            height: size.h\r\n          });\r\n        } else if((this.widgetMode === WIDGET_MINIMIZED && dx > threshold) || // minimize to normal\r\n        (this.widgetMode === WIDGET_MAXIMIZED && dx < -threshold)) { // maximize to normal\r\n          this.widgetMode = WIDGET_NORMAL;\r\n          mapWidth = size.w - WIDGET_MIN_WIDTH - SPLITTER_HEIGHT;\r\n          splitterRight = mapWidth;\r\n          mapRight = 0;\r\n          widgetWidth = WIDGET_MIN_WIDTH;\r\n          changed = true;\r\n          this.emit('resized', {\r\n            left: splitterRight + SPLITTER_HEIGHT,\r\n            right: 'auto',\r\n            top: 0,\r\n            width: widgetWidth,\r\n            height: size.h\r\n          });\r\n        }\r\n        if (changed) {\r\n          animArray.push(baseFx.animateProperty({\r\n            node: this.widgetContainerNode,\r\n            duration: ANIMATION_DURATION,\r\n            properties: {\r\n              left: 'auto',\r\n              right: splitterRight + SPLITTER_HEIGHT,\r\n              width: widgetWidth\r\n            }\r\n          }));\r\n\r\n          animArray.push(baseFx.animateProperty({\r\n            node: this.containerNode,\r\n            duration: ANIMATION_DURATION,\r\n            properties: {\r\n              left: 'auto',\r\n              right: -this.currentIndex * widgetWidth,\r\n              width: widgetWidth\r\n            }\r\n          }));\r\n\r\n          animArray.push(baseFx.animateProperty({\r\n            node: this.splitterNode,\r\n            duration: ANIMATION_DURATION,\r\n            properties: {\r\n              left: 'auto',\r\n              right: splitterRight\r\n            }\r\n          }));\r\n\r\n          animArray.push(baseFx.animateProperty({\r\n            node: this.mapNode,\r\n            duration: ANIMATION_DURATION,\r\n            properties: {\r\n              left: 'auto',\r\n              width: mapWidth,\r\n              right: mapRight\r\n            }\r\n          }));\r\n\r\n          animation = coreFx.combine(animArray);\r\n          animation.onEnd = lang.hitch(this, this._resizeActivePanel);\r\n          animation.play();\r\n        } else {\r\n          this._restoreLandscapeLayout();\r\n        }\r\n      } else {\r\n        if (this.widgetMode === WIDGET_NORMAL && dx < -threshold) { // normal to maximize\r\n          this.widgetMode = WIDGET_MAXIMIZED;\r\n          splitterLeft = 0;\r\n          mapWidth = size.w - WIDGET_MIN_WIDTH - SPLITTER_HEIGHT;\r\n          mapLeft = -mapWidth;\r\n          widgetWidth = size.w - SPLITTER_HEIGHT;\r\n          changed = true;\r\n          this.emit('resized', {\r\n            left: splitterLeft + SPLITTER_HEIGHT,\r\n            top: 0,\r\n            width: widgetWidth,\r\n            height: size.h\r\n          });\r\n        } else if(this.widgetMode === WIDGET_NORMAL && dx > threshold) { // normal to minimize\r\n          this.widgetMode = WIDGET_MINIMIZED;\r\n          mapWidth = size.w - SPLITTER_HEIGHT;\r\n          splitterLeft = mapWidth;\r\n          mapLeft = 0;\r\n          widgetWidth = WIDGET_MIN_WIDTH;\r\n          changed = true;\r\n          this.emit('resized', {\r\n            left: splitterLeft + SPLITTER_HEIGHT,\r\n            top: 0,\r\n            width: widgetWidth,\r\n            height: size.h\r\n          });\r\n        } else if(this.widgetMode === WIDGET_MINIMIZED && dx < -threshold || // minimize to normal\r\n        this.widgetMode === WIDGET_MAXIMIZED && dx > threshold) { // maximize to normal\r\n          this.widgetMode = WIDGET_NORMAL;\r\n          mapWidth = size.w - WIDGET_MIN_WIDTH - SPLITTER_HEIGHT;\r\n          splitterLeft = mapWidth;\r\n          mapLeft = 0;\r\n          widgetWidth = WIDGET_MIN_WIDTH;\r\n          changed = true;\r\n          this.emit('resized', {\r\n            left: splitterLeft + SPLITTER_HEIGHT,\r\n            top: 0,\r\n            width: widgetWidth,\r\n            height: size.h\r\n          });\r\n        }\r\n        if (changed) {\r\n          animArray.push(baseFx.animateProperty({\r\n            node: this.widgetContainerNode,\r\n            duration: ANIMATION_DURATION,\r\n            properties: {\r\n              left: splitterLeft + SPLITTER_HEIGHT,\r\n              width: widgetWidth\r\n            }\r\n          }));\r\n\r\n          animArray.push(baseFx.animateProperty({\r\n            node: this.containerNode,\r\n            duration: ANIMATION_DURATION,\r\n            properties: {\r\n              left: -this.currentIndex * widgetWidth,\r\n              width: widgetWidth\r\n            }\r\n          }));\r\n\r\n          animArray.push(baseFx.animateProperty({\r\n            node: this.splitterNode,\r\n            duration: ANIMATION_DURATION,\r\n            properties: {\r\n              left: splitterLeft\r\n            }\r\n          }));\r\n\r\n          animArray.push(baseFx.animateProperty({\r\n            node: this.mapNode,\r\n            duration: ANIMATION_DURATION,\r\n            properties: {\r\n              width: mapWidth,\r\n              left: mapLeft\r\n            }\r\n          }));\r\n\r\n          animation = coreFx.combine(animArray);\r\n          animation.onEnd = lang.hitch(this, this._resizeActivePanel);\r\n          animation.play();\r\n        } else {\r\n          this._restoreLandscapeLayout();\r\n        }\r\n      }\r\n    },\r\n\r\n    _restorePortraitLayout: function() {\r\n      var size = domGeometry.getMarginBox(this.layoutId);\r\n      var animArray = [], animation, deferred = new Deferred();\r\n\r\n      var splitterTop, mapTop, mapHeight, widgetHeight;\r\n      if (this.widgetMode === WIDGET_NORMAL) { // normal\r\n        splitterTop = size.h * MAP_RATIO_PORTRAIT;\r\n        mapHeight = size.h * MAP_RATIO_PORTRAIT;\r\n        mapTop = 0;\r\n        widgetHeight = size.h - mapHeight - SPLITTER_HEIGHT;\r\n      } else if(this.widgetMode === WIDGET_MAXIMIZED) { // maximize\r\n        splitterTop = 0;\r\n        mapTop = -size.h * MAP_RATIO_PORTRAIT;\r\n        mapHeight = size.h * MAP_RATIO_PORTRAIT;\r\n        widgetHeight = size.h - SPLITTER_HEIGHT;\r\n      } else if(this.widgetMode === WIDGET_MINIMIZED) { // minimized\r\n        splitterTop = size.h - SPLITTER_HEIGHT;\r\n        mapHeight = size.h - SPLITTER_HEIGHT;\r\n        mapTop = 0;\r\n        widgetHeight = size.h * (1 - MAP_RATIO_PORTRAIT) - SPLITTER_HEIGHT;\r\n      }\r\n      animArray.push(baseFx.animateProperty({\r\n        node: this.widgetContainerNode,\r\n        duration: ANIMATION_DURATION,\r\n        properties: {\r\n          left: 0,\r\n          right: 0,\r\n          top: splitterTop + SPLITTER_HEIGHT,\r\n          height: widgetHeight,\r\n          width: size.w\r\n        }\r\n      }));\r\n\r\n      var containerProps;\r\n      if(window.isRTL) {\r\n        containerProps = {\r\n          right: -this.currentIndex * size.w,\r\n          width: size.w\r\n        }\r\n      } else {\r\n        containerProps = {\r\n          left: -this.currentIndex * size.w,\r\n          width: size.w\r\n        };\r\n      }\r\n      animArray.push(baseFx.animateProperty({\r\n        node: this.containerNode,\r\n        duration: ANIMATION_DURATION,\r\n        properties: containerProps\r\n      }));\r\n\r\n      animArray.push(baseFx.animateProperty({\r\n        node: this.splitterNode,\r\n        duration: ANIMATION_DURATION,\r\n        properties: {\r\n          top: splitterTop,\r\n          left: 0,\r\n          right: 0,\r\n          width: size.w,\r\n          height: SPLITTER_HEIGHT\r\n        }\r\n      }));\r\n\r\n      animArray.push(baseFx.animateProperty({\r\n        node: this.mapNode,\r\n        duration: ANIMATION_DURATION,\r\n        properties: {\r\n          height: mapHeight,\r\n          width: size.w,\r\n          top: mapTop,\r\n          left: 0,\r\n          right: 0\r\n        }\r\n      }));\r\n\r\n      animation = coreFx.combine(animArray);\r\n      animation.onEnd = lang.hitch(this, function() {\r\n        this._resizeActivePanel();\r\n        deferred.resolve();\r\n      });\r\n      animation.play();\r\n\r\n      return deferred;\r\n    },\r\n\r\n    _restoreLandscapeLayout: function() {\r\n      var size = domGeometry.getMarginBox(this.layoutId);\r\n      var animArray = [], animation, deferred = new Deferred();\r\n      var splitterLeft, mapLeft, splitterRight, mapRight, mapWidth, widgetWidth;\r\n\r\n      if (window.isRTL) {\r\n        if (this.widgetMode === WIDGET_NORMAL) { // normal\r\n          mapWidth = size.w - WIDGET_MIN_WIDTH - SPLITTER_HEIGHT;\r\n          splitterRight = mapWidth;\r\n          mapRight = 0;\r\n          widgetWidth = WIDGET_MIN_WIDTH;\r\n        } else if(this.widgetMode === WIDGET_MAXIMIZED) { // maximize\r\n          splitterRight = 0;\r\n          mapWidth = size.w - WIDGET_MIN_WIDTH - SPLITTER_HEIGHT;\r\n          mapRight = -mapWidth;\r\n          widgetWidth = size.w - SPLITTER_HEIGHT;\r\n        } else if(this.widgetMode === WIDGET_MINIMIZED) { // minimize\r\n          mapWidth = size.w - SPLITTER_HEIGHT;\r\n          splitterRight = mapWidth;\r\n          mapRight = 0;\r\n          widgetWidth = WIDGET_MIN_WIDTH;\r\n        }\r\n\r\n        animArray.push(baseFx.animateProperty({\r\n          node: this.widgetContainerNode,\r\n          duration: ANIMATION_DURATION,\r\n          properties: {\r\n            top: 0,\r\n            right: splitterRight + SPLITTER_HEIGHT,\r\n            width: widgetWidth,\r\n            height: size.h\r\n          }\r\n        }));\r\n\r\n        animArray.push(baseFx.animateProperty({\r\n          node: this.containerNode,\r\n          duration: ANIMATION_DURATION,\r\n          properties: {\r\n            right: -this.currentIndex * widgetWidth,\r\n            width: widgetWidth\r\n          }\r\n        }));\r\n\r\n        animArray.push(baseFx.animateProperty({\r\n          node: this.splitterNode,\r\n          duration: ANIMATION_DURATION,\r\n          properties: {\r\n            right: splitterRight,\r\n            top: 0,\r\n            height: size.h,\r\n            width: SPLITTER_HEIGHT\r\n          }\r\n        }));\r\n\r\n        animArray.push(baseFx.animateProperty({\r\n          node: this.mapNode,\r\n          duration: ANIMATION_DURATION,\r\n          properties: {\r\n            width: mapWidth,\r\n            height: size.h,\r\n            right: mapRight,\r\n            top: 0\r\n          }\r\n        }));\r\n      } else {\r\n        if (this.widgetMode === WIDGET_NORMAL) { // normal\r\n          mapWidth = size.w - WIDGET_MIN_WIDTH - SPLITTER_HEIGHT;\r\n          splitterLeft = mapWidth;\r\n          mapLeft = 0;\r\n          widgetWidth = WIDGET_MIN_WIDTH;\r\n        } else if(this.widgetMode === WIDGET_MAXIMIZED) { // maximize\r\n          splitterLeft = 0;\r\n          mapWidth = size.w - WIDGET_MIN_WIDTH - SPLITTER_HEIGHT;\r\n          mapLeft = -mapWidth;\r\n          widgetWidth = size.w - SPLITTER_HEIGHT;\r\n        } else if(this.widgetMode === WIDGET_MINIMIZED) { // minimize\r\n          mapWidth = size.w - SPLITTER_HEIGHT;\r\n          splitterLeft = mapWidth;\r\n          mapLeft = 0;\r\n          widgetWidth = WIDGET_MIN_WIDTH;\r\n        }\r\n\r\n        animArray.push(baseFx.animateProperty({\r\n          node: this.widgetContainerNode,\r\n          duration: ANIMATION_DURATION,\r\n          properties: {\r\n            top: 0,\r\n            left: splitterLeft + SPLITTER_HEIGHT,\r\n            width: widgetWidth,\r\n            height: size.h\r\n          }\r\n        }));\r\n\r\n        animArray.push(baseFx.animateProperty({\r\n          node: this.containerNode,\r\n          duration: ANIMATION_DURATION,\r\n          properties: {\r\n            left: -this.currentIndex * widgetWidth,\r\n            width: widgetWidth\r\n          }\r\n        }));\r\n\r\n        animArray.push(baseFx.animateProperty({\r\n          node: this.splitterNode,\r\n          duration: ANIMATION_DURATION,\r\n          properties: {\r\n            left: splitterLeft,\r\n            top: 0,\r\n            height: size.h,\r\n            width: SPLITTER_HEIGHT\r\n          }\r\n        }));\r\n\r\n        animArray.push(baseFx.animateProperty({\r\n          node: this.mapNode,\r\n          duration: ANIMATION_DURATION,\r\n          properties: {\r\n            width: mapWidth,\r\n            height: size.h,\r\n            left: mapLeft,\r\n            top: 0\r\n          }\r\n        }));\r\n      }\r\n\r\n      animation = coreFx.combine(animArray);\r\n      animation.onEnd = lang.hitch(this, function() {\r\n        this._resizeActivePanel();\r\n        deferred.resolve();\r\n      });\r\n      animation.play();\r\n\r\n      return deferred;\r\n    }\r\n  });\r\n});\r\n"]}